{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_debt",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collatAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amtOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeToMint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeToRepay",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_useVault",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "amtOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collatAmt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debtToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excerciseOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "excerciseOptionPartial",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemDebtEarly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "setBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        }
      ],
      "name": "setSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToExcercise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
    "1": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/access/Ownable.sol",
    "13": "contracts/derivatives.sol",
    "20": "interfaces/vaults.sol",
    "3": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
    "5": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/IERC20.sol",
    "6": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/SafeERC20.sol",
    "7": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Address.sol",
    "8": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/ReentrancyGuard.sol"
  },
  "ast": {
    "absolutePath": "contracts/derivatives.sol",
    "exportedSymbols": {
      "option": [
        2199
      ]
    },
    "id": 2200,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1626,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:13"
      },
      {
        "id": 1627,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:33:13"
      },
      {
        "absolutePath": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 1632,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 4230,
        "src": "96:121:13",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1628,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "109:9:13",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          },
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1629,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "124:8:13",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          },
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1630,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "138:6:13",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          },
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1631,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "150:7:13",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1634,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 4017,
        "src": "218:68:13",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1633,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "226:5:13",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/Math.sol",
        "file": "@openzeppelin/contracts/math/Math.sol",
        "id": 1636,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 3510,
        "src": "287:59:13",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1635,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "295:4:13",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1638,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 3437,
        "src": "347:67:13",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1637,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "355:7:13",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/matt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 1639,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 4270,
        "src": "415:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap.sol",
        "file": "../interfaces/uniswap.sol",
        "id": 1640,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 4832,
        "src": "475:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/vaults.sol",
        "file": "../interfaces/vaults.sol",
        "id": 1641,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 4438,
        "src": "511:34:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/base.sol",
        "file": "./base.sol",
        "id": 1642,
        "nodeType": "ImportDirective",
        "scope": 2200,
        "sourceUnit": 1113,
        "src": "546:20:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1643,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4269,
              "src": "588:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$4269",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 1644,
            "nodeType": "InheritanceSpecifier",
            "src": "588:15:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1645,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3436,
              "src": "605:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3436",
                "typeString": "contract Ownable"
              }
            },
            "id": 1646,
            "nodeType": "InheritanceSpecifier",
            "src": "605:7:13"
          }
        ],
        "contractDependencies": [
          3436,
          4269,
          4909
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2199,
        "linearizedBaseContracts": [
          2199,
          3436,
          4909,
          4269
        ],
        "name": "option",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1649,
            "libraryName": {
              "contractScope": null,
              "id": 1647,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4229,
              "src": "625:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4229",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "619:27:13",
            "typeName": {
              "contractScope": null,
              "id": 1648,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5183,
              "src": "639:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5183",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1652,
            "libraryName": {
              "contractScope": null,
              "id": 1650,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5387,
              "src": "657:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$5387",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "651:26:13",
            "typeName": {
              "id": 1651,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "669:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1655,
            "libraryName": {
              "contractScope": null,
              "id": 1653,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5105,
              "src": "688:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5105",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "682:27:13",
            "typeName": {
              "id": 1654,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "701:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 1658,
            "mutability": "constant",
            "name": "decimalAdj",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "714:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1656,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "714:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 1657,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "744:5:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1661,
            "mutability": "constant",
            "name": "vaultDecimalAdj",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "755:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1659,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "755:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 1660,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "790:5:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1663,
            "mutability": "mutable",
            "name": "collateralProvided",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "802:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1662,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "802:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1665,
            "mutability": "mutable",
            "name": "isRepaid",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "831:13:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1664,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "831:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1667,
            "mutability": "mutable",
            "name": "buyerRightsOnSale",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "850:22:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1666,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "850:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1669,
            "mutability": "mutable",
            "name": "sellerRightsOnSale",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "878:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1668,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "878:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "29dcb0cf",
            "id": 1671,
            "mutability": "mutable",
            "name": "deadline",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "907:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1670,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2f99e75",
            "id": 1673,
            "mutability": "mutable",
            "name": "collatAmt",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "937:24:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1672,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "937:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "875d94d2",
            "id": 1675,
            "mutability": "mutable",
            "name": "amtOwed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "967:22:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1674,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "967:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "baef0c08",
            "id": 1677,
            "mutability": "mutable",
            "name": "timeToExcercise",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "996:30:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1676,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "996:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d4e78086",
            "id": 1679,
            "mutability": "mutable",
            "name": "mintDeadline",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "1033:27:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1678,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1033:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2016bd4",
            "id": 1681,
            "mutability": "mutable",
            "name": "collateralToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "1068:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5183",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1680,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5183,
              "src": "1068:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5183",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8d89898",
            "id": 1683,
            "mutability": "mutable",
            "name": "debtToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "1103:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5183",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1682,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5183,
              "src": "1103:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5183",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 1685,
            "mutability": "mutable",
            "name": "buyer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "1133:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1684,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1133:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 1687,
            "mutability": "mutable",
            "name": "seller",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "1159:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1686,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1159:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d29fb74",
            "id": 1689,
            "mutability": "mutable",
            "name": "useVault",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "1215:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1688,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1215:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "430bf08a",
            "id": 1691,
            "mutability": "mutable",
            "name": "vaultAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2199,
            "src": "1241:27:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1690,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1241:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1769,
              "nodeType": "Block",
              "src": "1969:498:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1710,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "2005:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5183",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1712,
                          "name": "_collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1693,
                          "src": "2030:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1711,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5183,
                        "src": "2023:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5183_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2023:19:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5183",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2005:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5183",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1715,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:37:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1716,
                      "name": "debtToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1683,
                      "src": "2052:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5183",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1718,
                          "name": "_debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1695,
                          "src": "2071:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1717,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5183,
                        "src": "2064:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5183_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2064:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5183",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2052:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5183",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:25:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "collatAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1673,
                      "src": "2088:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1723,
                      "name": "_collatAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1697,
                      "src": "2100:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2088:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1725,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:22:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1726,
                      "name": "amtOwed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1675,
                      "src": "2121:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1727,
                      "name": "_amtOwed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1699,
                      "src": "2131:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2121:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1729,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:18:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1730,
                      "name": "timeToExcercise",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1677,
                      "src": "2150:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1731,
                      "name": "_timeToRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1703,
                      "src": "2168:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2150:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1733,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1734,
                      "name": "mintDeadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1679,
                      "src": "2190:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1735,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2205:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2205:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1737,
                        "name": "_timeToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "2223:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2205:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2190:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1740,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:44:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1741,
                      "name": "collateralProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1663,
                      "src": "2244:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2265:5:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2244:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1744,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1745,
                      "name": "isRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1665,
                      "src": "2280:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2291:5:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2280:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "2280:16:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1749,
                      "name": "useVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "2307:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1750,
                      "name": "_useVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1707,
                      "src": "2318:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2307:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1752,
                  "nodeType": "ExpressionStatement",
                  "src": "2307:20:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1753,
                      "name": "vaultAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1691,
                      "src": "2337:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1754,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1705,
                      "src": "2352:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2337:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1756,
                  "nodeType": "ExpressionStatement",
                  "src": "2337:21:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1757,
                      "name": "useVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "2372:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2384:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2372:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1768,
                  "nodeType": "IfStatement",
                  "src": "2368:93:13",
                  "trueBody": {
                    "id": 1767,
                    "nodeType": "Block",
                    "src": "2389:72:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1763,
                              "name": "vaultAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "2427:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1764,
                              "name": "collatAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1673,
                              "src": "2440:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1760,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1681,
                              "src": "2403:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5183",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5152,
                            "src": "2403:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2403:47:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1766,
                        "nodeType": "ExpressionStatement",
                        "src": "2403:47:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1770,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1693,
                  "mutability": "mutable",
                  "name": "_collateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1750:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "_debt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1780:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1697,
                  "mutability": "mutable",
                  "name": "_collatAmt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1804:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1699,
                  "mutability": "mutable",
                  "name": "_amtOwed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1833:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1701,
                  "mutability": "mutable",
                  "name": "_timeToMint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1860:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1703,
                  "mutability": "mutable",
                  "name": "_timeToRepay",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1889:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1705,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1920:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "_useVault",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1770,
                  "src": "1945:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1740:221:13"
            },
            "returnParameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:0:13"
            },
            "scope": 2199,
            "src": "1729:738:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1787,
              "nodeType": "Block",
              "src": "2516:71:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1776,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2534:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2534:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1778,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3372,
                            "src": "2548:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2548:7:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2534:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2526:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1783,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1685,
                      "src": "2566:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1784,
                      "name": "_buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1772,
                      "src": "2574:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2566:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1786,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:14:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a3f09ad6",
            "id": 1788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBuyer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1772,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1788,
                  "src": "2491:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2490:16:13"
            },
            "returnParameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2516:0:13"
            },
            "scope": 2199,
            "src": "2473:114:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1805,
              "nodeType": "Block",
              "src": "2638:73:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1794,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2656:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2656:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1796,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3372,
                            "src": "2670:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2670:7:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2656:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2648:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1801,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "2688:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1802,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1790,
                      "src": "2697:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2688:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1804,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:16:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e99d2866",
            "id": 1806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSeller",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1790,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1806,
                  "src": "2612:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2612:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2611:17:13"
            },
            "returnParameters": {
              "id": 1792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2638:0:13"
            },
            "scope": 2199,
            "src": "2593:118:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1823,
              "nodeType": "Block",
              "src": "2757:97:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1812,
                          "name": "collateralProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "2775:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2797:4:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2775:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2767:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2767:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1816,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:35:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1817,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2820:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2820:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1819,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "2838:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2820:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1821,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2819:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1810,
                  "id": 1822,
                  "nodeType": "Return",
                  "src": "2813:34:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4c2067c7",
            "id": 1824,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "expired",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2734:2:13"
            },
            "returnParameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1824,
                  "src": "2752:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2751:6:13"
            },
            "scope": 2199,
            "src": "2718:136:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1878,
              "nodeType": "Block",
              "src": "2898:410:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1828,
                          "name": "collateralProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "2916:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2938:5:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2916:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2908:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2908:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1832,
                  "nodeType": "ExpressionStatement",
                  "src": "2908:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1836,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3027:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3027:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1840,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3047:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          ],
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3039:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1838,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3039:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3039:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1842,
                        "name": "collatAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1673,
                        "src": "3054:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1833,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "2998:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5183",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5164,
                      "src": "2998:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:66:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1844,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:66:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1845,
                      "name": "collateralProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1663,
                      "src": "3074:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3095:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3074:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1848,
                  "nodeType": "ExpressionStatement",
                  "src": "3074:25:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1849,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1685,
                      "src": "3110:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1850,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3372,
                        "src": "3118:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3118:7:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3110:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1853,
                  "nodeType": "ExpressionStatement",
                  "src": "3110:15:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1854,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "3136:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1855,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3372,
                        "src": "3145:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3145:7:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3136:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "3136:16:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1859,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1671,
                      "src": "3163:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1860,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3174:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3174:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1862,
                        "name": "timeToExcercise",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "3192:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3174:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3163:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1865,
                  "nodeType": "ExpressionStatement",
                  "src": "3163:44:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1866,
                      "name": "useVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "3222:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3234:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3222:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1877,
                  "nodeType": "IfStatement",
                  "src": "3218:84:13",
                  "trueBody": {
                    "id": 1876,
                    "nodeType": "Block",
                    "src": "3239:63:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1873,
                              "name": "collatAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1673,
                              "src": "3281:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1870,
                                  "name": "vaultAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1691,
                                  "src": "3259:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1869,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4437,
                                "src": "3253:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_vault_$4437_$",
                                  "typeString": "type(contract vault)"
                                }
                              },
                              "id": 1871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3253:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_vault_$4437",
                                "typeString": "contract vault"
                              }
                            },
                            "id": 1872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4411,
                            "src": "3253:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3253:38:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1875,
                        "nodeType": "ExpressionStatement",
                        "src": "3253:38:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6f758140",
            "id": 1879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2886:2:13"
            },
            "returnParameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2898:0:13"
            },
            "scope": 2199,
            "src": "2860:448:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1905,
              "nodeType": "Block",
              "src": "3364:162:13",
              "statements": [
                {
                  "assignments": [
                    1885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1885,
                      "mutability": "mutable",
                      "name": "withdrawAmt",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1905,
                      "src": "3374:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3374:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1897,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1892,
                                "name": "vaultAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1691,
                                "src": "3435:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1891,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4437,
                              "src": "3429:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_vault_$4437_$",
                                "typeString": "type(contract vault)"
                              }
                            },
                            "id": 1893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3429:19:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_vault_$4437",
                              "typeString": "contract vault"
                            }
                          },
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPricePerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4424,
                          "src": "3429:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3429:38:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1888,
                            "name": "vaultDecimalAdj",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1661,
                            "src": "3408:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1886,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1881,
                            "src": "3396:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5018,
                          "src": "3396:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3396:28:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5035,
                      "src": "3396:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:72:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3374:94:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1902,
                        "name": "withdrawAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1885,
                        "src": "3507:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1899,
                            "name": "vaultAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "3484:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1898,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4437,
                          "src": "3478:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_vault_$4437_$",
                            "typeString": "type(contract vault)"
                          }
                        },
                        "id": 1900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3478:19:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_vault_$4437",
                          "typeString": "contract vault"
                        }
                      },
                      "id": 1901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4416,
                      "src": "3478:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3478:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1904,
                  "nodeType": "ExpressionStatement",
                  "src": "3478:41:13"
                }
              ]
            },
            "documentation": null,
            "id": 1906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1906,
                  "src": "3338:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3337:17:13"
            },
            "returnParameters": {
              "id": 1883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3364:0:13"
            },
            "scope": 2199,
            "src": "3314:212:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1926,
              "nodeType": "Block",
              "src": "3587:105:13",
              "statements": [
                {
                  "assignments": [
                    1912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1912,
                      "mutability": "mutable",
                      "name": "bal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1926,
                      "src": "3597:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1911,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3597:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1922,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1919,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3649:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          ],
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3641:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1917,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3641:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3641:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1914,
                            "name": "vaultAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "3617:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1913,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4437,
                          "src": "3611:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_vault_$4437_$",
                            "typeString": "type(contract vault)"
                          }
                        },
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3611:19:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_vault_$4437",
                          "typeString": "contract vault"
                        }
                      },
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4431,
                      "src": "3611:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3611:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3597:58:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1923,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "3672:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1924,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3671:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1910,
                  "id": 1925,
                  "nodeType": "Return",
                  "src": "3665:11:13"
                }
              ]
            },
            "documentation": null,
            "id": 1927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3553:2:13"
            },
            "returnParameters": {
              "id": 1910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1909,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1927,
                  "src": "3578:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3578:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3577:9:13"
            },
            "scope": 2199,
            "src": "3532:160:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "3738:411:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1931,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3756:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3756:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1933,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "3770:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3756:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3748:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3748:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1936,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:28:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1938,
                          "name": "collateralProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "3795:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3817:4:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3795:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3787:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:35:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1944,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3840:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3840:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1946,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "3859:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3840:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3832:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3832:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1953,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3901:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3901:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1957,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "3921:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3913:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1955,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3913:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3913:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1959,
                        "name": "amtOwed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "3930:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1950,
                        "name": "debtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "3878:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5183",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5164,
                      "src": "3878:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3878:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1961,
                  "nodeType": "ExpressionStatement",
                  "src": "3878:60:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1962,
                      "name": "useVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "3952:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3964:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3952:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1974,
                  "nodeType": "IfStatement",
                  "src": "3948:90:13",
                  "trueBody": {
                    "id": 1973,
                    "nodeType": "Block",
                    "src": "3969:69:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1969,
                                "name": "vaultBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1927,
                                "src": "4012:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4012:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1966,
                                  "name": "vaultAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1691,
                                  "src": "3989:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1965,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4437,
                                "src": "3983:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_vault_$4437_$",
                                  "typeString": "type(contract vault)"
                                }
                              },
                              "id": 1967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3983:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_vault_$4437",
                                "typeString": "contract vault"
                              }
                            },
                            "id": 1968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4416,
                            "src": "3983:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3983:44:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1972,
                        "nodeType": "ExpressionStatement",
                        "src": "3983:44:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1980,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4084:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          ],
                          "id": 1979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4076:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1978,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4076:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4076:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1984,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "4099:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4091:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1982,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4091:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4091:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1986,
                        "name": "collatAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1673,
                        "src": "4107:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1975,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "4047:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5183",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5164,
                      "src": "4047:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:70:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:70:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1989,
                      "name": "isRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1665,
                      "src": "4127:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4138:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4127:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1992,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:15:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "10209887",
            "id": 1994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "excerciseOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3726:2:13"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3738:0:13"
            },
            "scope": 2199,
            "src": "3702:447:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2093,
              "nodeType": "Block",
              "src": "4247:617:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2004,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4265:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4265:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2006,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "4279:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4265:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4257:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4257:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2009,
                  "nodeType": "ExpressionStatement",
                  "src": "4257:28:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2011,
                          "name": "_amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "4304:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2012,
                          "name": "amtOwed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "4312:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4304:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4296:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4296:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "4296:24:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2017,
                          "name": "collateralProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "4338:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4360:4:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4338:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4330:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4330:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2021,
                  "nodeType": "ExpressionStatement",
                  "src": "4330:35:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2023,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4383:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4383:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2025,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "4402:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4383:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4375:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4375:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "4375:36:13"
                },
                {
                  "assignments": [
                    2030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2030,
                      "mutability": "mutable",
                      "name": "percentRepaid",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2093,
                      "src": "4421:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2029,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4421:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2038,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2036,
                        "name": "amtOwed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1675,
                        "src": "4470:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2033,
                            "name": "decimalAdj",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "4454:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2031,
                            "name": "_amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1996,
                            "src": "4445:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5018,
                          "src": "4445:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4445:20:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5035,
                      "src": "4445:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4445:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4421:57:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2042,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1685,
                        "src": "4511:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2045,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "4526:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4518:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4518:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4518:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2047,
                        "name": "_amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1996,
                        "src": "4535:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2039,
                        "name": "debtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "4488:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5183",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5164,
                      "src": "4488:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4488:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2049,
                  "nodeType": "ExpressionStatement",
                  "src": "4488:52:13"
                },
                {
                  "assignments": [
                    2051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2051,
                      "mutability": "mutable",
                      "name": "redeemAmt",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2093,
                      "src": "4550:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2050,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4550:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2059,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "decimalAdj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1658,
                        "src": "4603:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2054,
                            "name": "percentRepaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2030,
                            "src": "4584:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2052,
                            "name": "collatAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1673,
                            "src": "4570:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5018,
                          "src": "4570:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4570:28:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5035,
                      "src": "4570:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4570:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4550:64:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2060,
                      "name": "useVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "4628:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4640:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4628:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2068,
                  "nodeType": "IfStatement",
                  "src": "4624:66:13",
                  "trueBody": {
                    "id": 2067,
                    "nodeType": "Block",
                    "src": "4645:45:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2064,
                              "name": "_amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1996,
                              "src": "4674:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2063,
                            "name": "withdrawAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1906,
                            "src": "4659:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4659:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2066,
                        "nodeType": "ExpressionStatement",
                        "src": "4659:20:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2072,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1998,
                        "src": "4724:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2073,
                        "name": "redeemAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2051,
                        "src": "4736:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2069,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "4699:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5183",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5132,
                      "src": "4699:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4699:47:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2075,
                  "nodeType": "ExpressionStatement",
                  "src": "4699:47:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2076,
                      "name": "amtOwed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1675,
                      "src": "4757:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2079,
                          "name": "_amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "4779:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2077,
                          "name": "amtOwed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "4767:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4955,
                        "src": "4767:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4767:17:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4757:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2082,
                  "nodeType": "ExpressionStatement",
                  "src": "4757:27:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2083,
                      "name": "collatAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1673,
                      "src": "4794:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2086,
                          "name": "redeemAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "4820:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2084,
                          "name": "collatAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1673,
                          "src": "4806:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4955,
                        "src": "4806:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4806:24:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4794:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "4794:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 2090,
                        "name": "redeemAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2051,
                        "src": "4847:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2091,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4846:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2002,
                  "id": 2092,
                  "nodeType": "Return",
                  "src": "4840:17:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7656b8fa",
            "id": 2094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "excerciseOptionPartial",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "_amt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2094,
                  "src": "4187:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4187:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2094,
                  "src": "4201:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4201:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4186:34:13"
            },
            "returnParameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2001,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2094,
                  "src": "4238:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4237:9:13"
            },
            "scope": 2199,
            "src": "4155:709:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2145,
              "nodeType": "Block",
              "src": "4901:302:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2098,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4919:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4919:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2100,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "4933:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4919:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4911:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4911:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "4911:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2105,
                          "name": "collateralProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "4959:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4981:4:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4959:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4951:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4951:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "4951:35:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2111,
                          "name": "isRepaid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "5004:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5016:5:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5004:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4996:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4996:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ExpressionStatement",
                  "src": "4996:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2117,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5041:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5041:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2119,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "5059:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5041:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5033:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2122,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:35:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2123,
                      "name": "amtOwed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1675,
                      "src": "5078:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5088:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5078:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2126,
                  "nodeType": "ExpressionStatement",
                  "src": "5078:11:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2132,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5137:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          ],
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5129:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2130,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5129:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5129:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2136,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "5152:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5144:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2134,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5144:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5144:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2138,
                        "name": "collatAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1673,
                        "src": "5161:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2127,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "5100:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5183",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5164,
                      "src": "5100:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:71:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2140,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:71:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2141,
                      "name": "isRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1665,
                      "src": "5181:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5192:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5181:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2144,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:15:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d25183f8",
            "id": 2146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemDebt",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4889:2:13"
            },
            "returnParameters": {
              "id": 2096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4901:0:13"
            },
            "scope": 2199,
            "src": "4870:333:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2197,
              "nodeType": "Block",
              "src": "5245:297:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5263:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5263:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2152,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "5277:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5263:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5255:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5255:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2155,
                  "nodeType": "ExpressionStatement",
                  "src": "5255:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5303:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5303:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2159,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "5317:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5303:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5295:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5295:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "5295:28:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2164,
                          "name": "collateralProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "5343:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5365:4:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5343:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5335:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5335:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2168,
                  "nodeType": "ExpressionStatement",
                  "src": "5335:35:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2170,
                          "name": "isRepaid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1665,
                          "src": "5388:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5400:5:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5388:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5380:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5380:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "5380:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2175,
                      "name": "amtOwed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1675,
                      "src": "5417:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5427:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5417:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2178,
                  "nodeType": "ExpressionStatement",
                  "src": "5417:11:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5476:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_option_$2199",
                              "typeString": "contract option"
                            }
                          ],
                          "id": 2183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5468:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5468:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5468:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2188,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "5491:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5483:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5483:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5483:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2190,
                        "name": "collatAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1673,
                        "src": "5500:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2179,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "5439:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5183",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5164,
                      "src": "5439:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5439:71:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2192,
                  "nodeType": "ExpressionStatement",
                  "src": "5439:71:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2193,
                      "name": "isRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1665,
                      "src": "5520:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5531:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5520:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2196,
                  "nodeType": "ExpressionStatement",
                  "src": "5520:15:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cec1c913",
            "id": 2198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemDebtEarly",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5233:2:13"
            },
            "returnParameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5245:0:13"
            },
            "scope": 2199,
            "src": "5209:333:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2200,
        "src": "569:4976:13"
      }
    ],
    "src": "37:5509:13"
  },
  "bytecode": "",
  "bytecodeSha1": "37a19c86651a0a0a048e7e811d3e1415c7ded3ee",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "option",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Ownable.transferOwnership": {
          "77": [
            1270,
            1292,
            true
          ],
          "78": [
            2071,
            2093,
            true
          ]
        }
      },
      "13": {
        "option.depositCollateral": {
          "60": [
            2916,
            2943,
            true
          ],
          "61": [
            3222,
            3238,
            false
          ]
        },
        "option.excerciseOption": {
          "55": [
            3756,
            3775,
            true
          ],
          "56": [
            3795,
            3821,
            true
          ],
          "57": [
            3840,
            3867,
            true
          ],
          "58": [
            3952,
            3968,
            false
          ]
        },
        "option.excerciseOptionPartial": {
          "62": [
            4265,
            4284,
            true
          ],
          "63": [
            4304,
            4319,
            true
          ],
          "64": [
            4338,
            4364,
            true
          ],
          "65": [
            4383,
            4410,
            true
          ],
          "66": [
            4628,
            4644,
            false
          ]
        },
        "option.expired": {
          "59": [
            2775,
            2801,
            true
          ]
        },
        "option.redeemDebt": {
          "72": [
            4919,
            4939,
            true
          ],
          "73": [
            4959,
            4985,
            true
          ],
          "74": [
            5004,
            5021,
            true
          ],
          "75": [
            5041,
            5067,
            true
          ]
        },
        "option.redeemDebtEarly": {
          "68": [
            5263,
            5283,
            true
          ],
          "69": [
            5303,
            5322,
            true
          ],
          "70": [
            5343,
            5369,
            true
          ],
          "71": [
            5388,
            5405,
            true
          ]
        },
        "option.setBuyer": {
          "67": [
            2534,
            2555,
            true
          ]
        },
        "option.setSeller": {
          "76": [
            2656,
            2677,
            true
          ]
        }
      },
      "20": {},
      "3": {
        "SafeMath.div": {
          "81": [
            3826,
            3831,
            true
          ]
        },
        "SafeMath.mul": {
          "79": [
            2479,
            2485,
            false
          ],
          "80": [
            2565,
            2575,
            true
          ]
        },
        "SafeMath.sub": {
          "82": [
            1859,
            1865,
            true
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "46": [
            670,
            687
          ]
        }
      },
      "1": {
        "Ownable.owner": {
          "28": [
            1123,
            1136
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1753,
            1798
          ],
          "17": [
            1808,
            1827
          ]
        },
        "Ownable.transferOwnership": {
          "43": [
            2063,
            2136
          ],
          "44": [
            2146,
            2189
          ],
          "45": [
            2199,
            2216
          ]
        }
      },
      "13": {
        "option.depositCollateral": {
          "9": [
            2908,
            2944
          ],
          "10": [
            2998,
            3064
          ],
          "11": [
            3074,
            3099
          ],
          "12": [
            3110,
            3125
          ],
          "13": [
            3136,
            3152
          ],
          "14": [
            3163,
            3207
          ],
          "15": [
            3253,
            3291
          ]
        },
        "option.excerciseOption": {
          "0": [
            3748,
            3776
          ],
          "1": [
            3787,
            3822
          ],
          "2": [
            3832,
            3868
          ],
          "3": [
            3878,
            3938
          ],
          "4": [
            3983,
            4027
          ],
          "5": [
            4047,
            4117
          ],
          "6": [
            4127,
            4142
          ]
        },
        "option.excerciseOptionPartial": {
          "18": [
            4257,
            4285
          ],
          "19": [
            4296,
            4320
          ],
          "20": [
            4330,
            4365
          ],
          "21": [
            4375,
            4411
          ],
          "22": [
            4488,
            4540
          ],
          "23": [
            4659,
            4679
          ],
          "24": [
            4699,
            4746
          ],
          "25": [
            4757,
            4784
          ],
          "26": [
            4794,
            4830
          ],
          "27": [
            4840,
            4857
          ]
        },
        "option.expired": {
          "7": [
            2767,
            2802
          ],
          "8": [
            2813,
            2847
          ]
        },
        "option.redeemDebt": {
          "37": [
            4911,
            4940
          ],
          "38": [
            4951,
            4986
          ],
          "39": [
            4996,
            5022
          ],
          "40": [
            5033,
            5068
          ]
        },
        "option.redeemDebtEarly": {
          "31": [
            5255,
            5284
          ],
          "32": [
            5295,
            5323
          ],
          "33": [
            5335,
            5370
          ],
          "34": [
            5380,
            5406
          ],
          "35": [
            5417,
            5428
          ],
          "36": [
            5439,
            5510
          ]
        },
        "option.setBuyer": {
          "29": [
            2526,
            2556
          ],
          "30": [
            2566,
            2580
          ]
        },
        "option.setSeller": {
          "41": [
            2648,
            2678
          ],
          "42": [
            2688,
            2704
          ]
        },
        "option.withdrawAmount": {
          "51": [
            3478,
            3519
          ]
        }
      },
      "20": {},
      "3": {
        "SafeMath.div": {
          "50": [
            3178,
            3224
          ],
          "53": [
            3818,
            3846
          ]
        },
        "SafeMath.mul": {
          "47": [
            2501,
            2509
          ],
          "48": [
            2557,
            2613
          ],
          "49": [
            2624,
            2632
          ]
        },
        "SafeMath.sub": {
          "52": [
            1398,
            1448
          ],
          "54": [
            1851,
            1880
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.1.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/SafeMath",
    "vault"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "569:4976:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1159:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3702:447;;;:::i;:::-;;907:23;;;:::i;:::-;;;;;;;:::i;1241:27::-;;;:::i;2718:136::-;;;:::i;:::-;;;;;;;:::i;2860:448::-;;;:::i;1689:145:1:-;;;:::i;1133:20:13:-;;;:::i;4155:709::-;;;;;;:::i;:::-;;:::i;967:22::-;;;:::i;1066:77:1:-;;;:::i;1215:20:13:-;;;:::i;2473:114::-;;;;;;:::i;:::-;;:::i;1068:29::-;;;:::i;996:30::-;;;:::i;937:24::-;;;:::i;5209:333::-;;;:::i;4870:::-;;;:::i;1033:27::-;;;:::i;2593:118::-;;;;;;:::i;:::-;;:::i;1983:240:1:-;;;;;;:::i;:::-;;:::i;1103:23:13:-;;;:::i;1159:21::-;;;-1:-1:-1;;;;;1159:21:13;;:::o;3702:447::-;3770:5;;-1:-1:-1;;;;;3770:5:13;3756:10;:19;3748:28;;;;;;3795:18;;;-1:-1:-1;;;3795:18:13;;;;:26;;;3787:35;;;;;;3859:8;;3840:15;:27;;3832:36;;;;;;3878:9;;3921:6;;3930:7;;;3878:60;;-1:-1:-1;;;3878:60:13;;-1:-1:-1;;;;;3878:9:13;;;;:22;;:60;;3901:10;;3921:6;;;;;3878:60;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3952:8:13;;-1:-1:-1;;;3952:8:13;;;;:16;;3964:4;3952:16;3948:90;;;3989:12;;-1:-1:-1;;;;;3989:12:13;3983:28;4012:14;:12;:14::i;:::-;3983:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3948:90;4047:15;;4099:5;;4107:9;;4047:70;;-1:-1:-1;;;4047:70:13;;-1:-1:-1;;;;;4047:15:13;;;;:28;;:70;;4084:4;;4099:5;;;;;4047:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4138:4:13;4127:15;;-1:-1:-1;;;;4127:15:13;-1:-1:-1;;;4127:15:13;;;3702:447::o;907:23::-;;;;:::o;1241:27::-;;;-1:-1:-1;;;;;1241:27:13;;:::o;2718:136::-;2775:18;;;2752:4;;-1:-1:-1;;;2775:18:13;;;;;:26;;;2767:35;;;;;;-1:-1:-1;2838:8:13;;2820:15;:26;2718:136;:::o;2860:448::-;2916:18;;-1:-1:-1;;;2916:18:13;;;;:27;2908:36;;;;;;2998:15;;3054:9;;2998:66;;-1:-1:-1;;;2998:66:13;;-1:-1:-1;;;;;2998:15:13;;;;:28;;:66;;3027:10;;3047:4;;2998:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3095:4:13;3074:25;;-1:-1:-1;;;;3074:25:13;-1:-1:-1;;;3074:25:13;;;3118:7;:5;:7::i;:::-;3110:5;:15;;-1:-1:-1;;;;;;3110:15:13;-1:-1:-1;;;;;3110:15:13;;;;;;;;;;3145:7;:5;:7::i;:::-;3136:6;:16;;-1:-1:-1;;;;;;3136:16:13;-1:-1:-1;;;;;3136:16:13;;;;;;;;;;;;3192:15;;3174;:33;3163:8;:44;-1:-1:-1;;;3222:8:13;;;;:16;;-1:-1:-1;3222:16:13;3218:84;;;3259:12;;3281:9;;3253:38;;-1:-1:-1;;;3253:38:13;;-1:-1:-1;;;;;3259:12:13;;;;3253:27;;:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:84;2860:448::o;1689:145:1:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:1;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:1;;;;;;;:::i;:::-;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;-1:-1:-1;;;;;1779:6:1::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:1::1;::::0;;1689:145::o;1133:20:13:-;;;-1:-1:-1;;;;;1133:20:13;;:::o;4155:709::-;4279:5;;4238:7;;-1:-1:-1;;;;;4279:5:13;4265:10;:19;4257:28;;;;;;4312:7;;4304:4;:15;;4296:24;;;;;;4338:18;;;-1:-1:-1;;;4338:18:13;;;;:26;;;4330:35;;;;;;4402:8;;4383:15;:27;;4375:36;;;;;;4470:7;;4421:21;;4445:33;;:20;:4;744:5;4445:8;:20::i;:::-;:24;;:33::i;:::-;4488:9;;4511:5;;4526:6;;4488:52;;-1:-1:-1;;;4488:52:13;;4421:57;;-1:-1:-1;;;;;;4488:9:13;;;;:22;;:52;;4511:5;;;4526:6;;4535:4;;4488:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4550:17;4570:44;744:5;4570:28;4584:13;4570:9;;:13;;:28;;;;:::i;:44::-;4628:8;;4550:64;;-1:-1:-1;;;;4628:8:13;;;;:16;;4640:4;4628:16;4624:66;;;4659:20;4674:4;4659:14;:20::i;:::-;4699:15;;:47;;-1:-1:-1;;;4699:47:13;;-1:-1:-1;;;;;4699:15:13;;;;:24;;:47;;4724:10;;4736:9;;4699:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4767:7:13;;:17;;4779:4;4767:11;:17::i;:::-;4757:7;:27;4806:9;;:24;;4820:9;4806:13;:24::i;:::-;4794:9;:36;4847:9;-1:-1:-1;;4155:709:13;;;;;:::o;967:22::-;;;;:::o;1066:77:1:-;1130:6;;-1:-1:-1;;;;;1130:6:1;1066:77;:::o;1215:20:13:-;;;-1:-1:-1;;;1215:20:13;;;;;:::o;2473:114::-;2548:7;:5;:7::i;:::-;-1:-1:-1;;;;;2534:21:13;:10;-1:-1:-1;;;;;2534:21:13;;2526:30;;;;;;2566:5;:14;;-1:-1:-1;;;;;;2566:14:13;-1:-1:-1;;;;;2566:14:13;;;;;;;;;;2473:114::o;1068:29::-;;;-1:-1:-1;;;;;1068:29:13;;:::o;996:30::-;;;;:::o;937:24::-;;;;:::o;5209:333::-;5277:6;;-1:-1:-1;;;;;5277:6:13;5263:10;:20;5255:29;;;;;;5317:5;;-1:-1:-1;;;;;5317:5:13;5303:10;:19;5295:28;;;;;;5343:18;;;-1:-1:-1;;;5343:18:13;;;;:26;;;5335:35;;;;;;5388:8;;-1:-1:-1;;;5388:8:13;;;;:17;5380:26;;;;;;5427:1;5417:7;:11;;;5439:15;;5491:6;;5500:9;;5439:71;;-1:-1:-1;;;5439:71:13;;-1:-1:-1;;;;;5439:15:13;;;;:28;;:71;;5476:4;;5491:6;;;5500:9;;5439:71;;:::i;4870:333::-;4933:6;;-1:-1:-1;;;;;4933:6:13;4919:10;:20;4911:29;;;;;;4959:18;;;-1:-1:-1;;;4959:18:13;;;;:26;;;4951:35;;;;;;5004:8;;-1:-1:-1;;;5004:8:13;;;;:17;4996:26;;;;;;5059:8;;5041:15;:26;5033:35;;;;;1033:27;;;;:::o;2593:118::-;2670:7;:5;:7::i;:::-;-1:-1:-1;;;;;2656:21:13;:10;-1:-1:-1;;;;;2656:21:13;;2648:30;;;;;;2688:6;:16;;-1:-1:-1;;;;;;2688:16:13;-1:-1:-1;;;;;2688:16:13;;;;;;;;;;2593:118::o;1983:240:1:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:1;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2071:22:1;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:1::1;;;;;;;:::i;:::-;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:1;;::::1;::::0;2172:6:::1;::::0;2151:38:::1;::::0;2172:6:::1;::::0;2151:38:::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:1::1;-1:-1:-1::0;;;;;2199:17:1;;;::::1;::::0;;;::::1;::::0;;1983:240::o;1103:23:13:-;;;-1:-1:-1;;;;;1103:23:13;;:::o;3532:160::-;3617:12;;3611:44;;-1:-1:-1;;;3611:44:13;;3578:7;;;;-1:-1:-1;;;;;3617:12:13;;;;3611:29;;:44;;3649:4;;3611:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3597:58;-1:-1:-1;;3532:160:13;:::o;590:104:0:-;677:10;590:104;:::o;2180:459:3:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:3;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:3;;;;;;;:::i;:::-;2631:1;2180:459;-1:-1:-1;;;2180:459:3:o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;3314:212:13:-;3374:19;3396:72;3435:12;;;;;;;;;-1:-1:-1;;;;;3435:12:13;-1:-1:-1;;;;;3429:36:13;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3396:28;:7;790:5;3396:11;:28::i;:72::-;3484:12;;3478:41;;-1:-1:-1;;;3478:41:13;;3374:94;;-1:-1:-1;;;;;;3484:12:13;;3478:28;;:41;;3374:94;;3478:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3314:212;;:::o;1321:134:3:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;3713:272::-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:3;;;;;;;;:::i;:::-;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:3:o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;:::i;:::-;-1:-1:-1;;;1902:5:3;;;1746:187::o;5:130:-1:-;72:20;;-1:-1;;;;;8162:54;;9415:35;;9405:2;;9464:1;;9454:12;555:241;;659:2;647:9;638:7;634:23;630:32;627:2;;;-1:-1;;665:12;627:2;727:53;772:7;748:22;727:53;:::i;803:257::-;;915:2;903:9;894:7;890:23;886:32;883:2;;;-1:-1;;921:12;883:2;223:6;217:13;9561:5;8074:13;8067:21;9539:5;9536:32;9526:2;;-1:-1;;9572:12;1067:263;;1182:2;1170:9;1161:7;1157:23;1153:32;1150:2;;;-1:-1;;1188:12;1150:2;-1:-1;492:13;;1144:186;-1:-1;1144:186::o;1337:366::-;;;1458:2;1446:9;1437:7;1433:23;1429:32;1426:2;;;-1:-1;;1464:12;1426:2;357:6;344:20;1516:63;;1634:53;1679:7;1616:2;1659:9;1655:22;1634:53;:::i;:::-;1624:63;;1420:283;;;;;:::o;3831:222::-;-1:-1;;;;;8162:54;;;;1930:37;;3958:2;3943:18;;3929:124::o;4060:460::-;-1:-1;;;;;8162:54;;;1789:58;;8162:54;;;;4423:2;4408:18;;1930:37;4506:2;4491:18;;3782:37;;;;4251:2;4236:18;;4222:298::o;4978:333::-;-1:-1;;;;;8162:54;;;;1930:37;;5297:2;5282:18;;3782:37;5133:2;5118:18;;5104:207::o;5318:210::-;8074:13;;8067:21;2044:34;;5439:2;5424:18;;5410:118::o;5794:310::-;;5941:2;;5962:17;5955:47;2398:5;7697:12;7854:6;5941:2;5930:9;5926:18;7842:19;-1:-1;9047:101;9061:6;9058:1;9055:13;9047:101;;;9128:11;;;;;9122:18;9109:11;;;7882:14;9109:11;9102:39;9076:10;;9047:101;;;9163:6;9160:1;9157:13;9154:2;;;-1:-1;7882:14;9219:6;5930:9;9210:16;;9203:27;9154:2;-1:-1;9335:7;9319:14;-1:-1;;9315:28;2556:39;;;;7882:14;2556:39;;5912:192;-1:-1;;;5912:192::o;6111:416::-;6311:2;6325:47;;;2832:2;6296:18;;;7842:19;2868:34;7882:14;;;2848:55;-1:-1;;;2923:12;;;2916:30;2965:12;;;6282:245::o;6534:416::-;6734:2;6748:47;;;3216:2;6719:18;;;7842:19;3252:34;7882:14;;;3232:55;-1:-1;;;3307:12;;;3300:25;3344:12;;;6705:245::o;6957:416::-;7157:2;7171:47;;;7142:18;;;7842:19;3631:34;7882:14;;;3611:55;3685:12;;;7128:245::o;7380:222::-;3782:37;;;7507:2;7492:18;;7478:124::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    569,
    5545
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D29FB74 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCEC1C913 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCEC1C913 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD25183F8 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xD4E78086 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xE99D2866 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF8D89898 EQ PUSH2 0x24D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x9D29FB74 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xA3F09AD6 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xBAEF0C08 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC2F99E75 EQ PUSH2 0x207 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6F758140 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x6F758140 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x7656B8FA EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x875D94D2 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D4 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8551A53 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x10209887 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x4C2067C7 EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH2 0x14F PUSH2 0x459 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x48F JUMP JUMPDEST PUSH2 0x16D PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x69D JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x177 PUSH2 0x89A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x8AF JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x14F PUSH2 0x906 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x16D PUSH2 0x921 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x177 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x16D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xB1A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xA SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x23B872DD SWAP5 PUSH2 0x2DE SWAP5 CALLER SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP3 ADD PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x3B0 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E1A7D4D PUSH2 0x361 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x3EB SWAP4 ADDRESS SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH1 0x4 ADD PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD TIMESTAMP GT SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x4DB SWAP2 CALLER SWAP2 ADDRESS SWAP2 PUSH1 0x4 ADD PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x549 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x571 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD TIMESTAMP ADD PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x613 JUMPI PUSH1 0xB SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB6B55F25 SWAP2 PUSH2 0x5E0 SWAP2 PUSH1 0x4 ADD PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x61D PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x71A SWAP1 PUSH2 0x714 DUP7 PUSH2 0x2710 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x758 SWAP4 DUP2 AND SWAP3 AND SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x786 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AA SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7C8 PUSH2 0x2710 PUSH2 0x714 DUP5 PUSH1 0x3 SLOAD PUSH2 0xBB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x7EB JUMPI PUSH2 0x7EB DUP6 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x81D SWAP1 DUP8 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x87D SWAP1 DUP7 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x3 SLOAD PUSH2 0x88D SWAP1 DUP3 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x3 SSTORE SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x7 SLOAD PUSH1 0xA SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 PUSH4 0x23B872DD SWAP5 PUSH2 0x3EB SWAP5 ADDRESS SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xE88 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA24 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA6B PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB5E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBC7 JUMPI POP PUSH1 0x0 PUSH2 0x894 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xBD4 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0xF69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD2 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D68175C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x714 DUP5 PUSH2 0x2710 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0xD03 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xDA8 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE06 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBF2 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBF2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE41 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xE6B DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEFC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xEE0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF0D JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xCC CHAINID PUSH23 0x7EA21B01E5F0BEECCE9F5CFE1F508DAFADCA87DEBBA137 0xC SIGNEXTEND LT 0xAB 0xD3 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        569,
        5545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9D29FB74"
    },
    "38": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCEC1C913"
    },
    "49": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "GT",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCEC1C913"
    },
    "60": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20F"
    },
    "64": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD25183F8"
    },
    "71": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x217"
    },
    "75": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD4E78086"
    },
    "82": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21F"
    },
    "86": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE99D2866"
    },
    "93": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x227"
    },
    "97": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "105": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23A"
    },
    "108": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "109": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF8D89898"
    },
    "115": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "116": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x24D"
    },
    "119": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "120": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x142"
    },
    "123": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMP",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "126": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9D29FB74"
    },
    "131": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "132": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1DC"
    },
    "135": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "136": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA3F09AD6"
    },
    "142": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "143": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E4"
    },
    "146": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB2016BD4"
    },
    "153": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "154": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F7"
    },
    "157": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "158": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xBAEF0C08"
    },
    "164": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "165": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FF"
    },
    "168": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "169": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "170": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC2F99E75"
    },
    "175": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "176": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x207"
    },
    "179": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "180": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x142"
    },
    "183": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMP",
      "path": "13"
    },
    "184": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "185": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "186": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6F758140"
    },
    "191": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "GT",
      "path": "13"
    },
    "192": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "196": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "197": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6F758140"
    },
    "202": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "203": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A1"
    },
    "206": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "207": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "208": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "213": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "214": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A9"
    },
    "217": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "218": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "219": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7150D8AE"
    },
    "224": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "225": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B1"
    },
    "228": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "229": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "230": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7656B8FA"
    },
    "235": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "236": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B9"
    },
    "239": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "240": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "241": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x875D94D2"
    },
    "246": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "247": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1CC"
    },
    "250": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "251": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "252": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "257": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "258": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D4"
    },
    "261": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "262": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x142"
    },
    "265": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMP",
      "path": "13"
    },
    "266": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "267": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "268": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8551A53"
    },
    "273": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "274": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "278": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "279": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x10209887"
    },
    "284": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "285": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x165"
    },
    "288": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "289": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "290": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x29DCB0CF"
    },
    "295": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "296": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16F"
    },
    "299": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "300": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "301": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x430BF08A"
    },
    "306": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "307": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x184"
    },
    "310": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "311": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "312": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4C2067C7"
    },
    "317": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "EQ",
      "path": "13"
    },
    "318": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x18C"
    },
    "321": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "322": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "323": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "DUP1",
      "path": "13"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        569,
        5545
      ],
      "op": "REVERT",
      "path": "13"
    },
    "327": {
      "offset": [
        1159,
        1180
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "328": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14F"
    },
    "331": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x255"
    },
    "334": {
      "fn": null,
      "jump": "i",
      "offset": [
        1159,
        1180
      ],
      "op": "JUMP",
      "path": "13"
    },
    "335": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "336": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "338": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "339": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15C"
    },
    "342": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "343": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "344": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE74"
    },
    "347": {
      "fn": null,
      "jump": "i",
      "offset": [
        1159,
        1180
      ],
      "op": "JUMP",
      "path": "13"
    },
    "348": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "349": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "351": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "352": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "DUP1",
      "path": "13"
    },
    "353": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "354": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "SUB",
      "path": "13"
    },
    "355": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "356": {
      "fn": null,
      "offset": [
        1159,
        1180
      ],
      "op": "RETURN",
      "path": "13"
    },
    "357": {
      "fn": "option.excerciseOption",
      "offset": [
        3702,
        4149
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "358": {
      "fn": "option.excerciseOption",
      "offset": [
        3702,
        4149
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "361": {
      "fn": "option.excerciseOption",
      "offset": [
        3702,
        4149
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x264"
    },
    "364": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        3702,
        4149
      ],
      "op": "JUMP",
      "path": "13"
    },
    "365": {
      "fn": "option.excerciseOption",
      "offset": [
        3702,
        4149
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "366": {
      "fn": "option.excerciseOption",
      "offset": [
        3702,
        4149
      ],
      "op": "STOP",
      "path": "13"
    },
    "367": {
      "offset": [
        907,
        930
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "368": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "371": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x453"
    },
    "374": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        907,
        930
      ],
      "op": "JUMP",
      "path": "13"
    },
    "375": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "376": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "378": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "379": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15C"
    },
    "382": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "383": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "384": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDF"
    },
    "387": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        907,
        930
      ],
      "op": "JUMP",
      "path": "13"
    },
    "388": {
      "offset": [
        1241,
        1268
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "389": {
      "fn": "option.excerciseOption",
      "offset": [
        1241,
        1268
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14F"
    },
    "392": {
      "fn": "option.excerciseOption",
      "offset": [
        1241,
        1268
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x459"
    },
    "395": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        1241,
        1268
      ],
      "op": "JUMP",
      "path": "13"
    },
    "396": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "397": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x194"
    },
    "400": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x468"
    },
    "403": {
      "fn": "option.expired",
      "jump": "i",
      "offset": [
        2718,
        2854
      ],
      "op": "JUMP",
      "path": "13"
    },
    "404": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "405": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "407": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "408": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15C"
    },
    "411": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "412": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "413": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEC5"
    },
    "416": {
      "fn": "option.expired",
      "jump": "i",
      "offset": [
        2718,
        2854
      ],
      "op": "JUMP",
      "path": "13"
    },
    "417": {
      "fn": "option.depositCollateral",
      "offset": [
        2860,
        3308
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "418": {
      "fn": "option.depositCollateral",
      "offset": [
        2860,
        3308
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "421": {
      "fn": "option.depositCollateral",
      "offset": [
        2860,
        3308
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x48F"
    },
    "424": {
      "fn": "option.depositCollateral",
      "jump": "i",
      "offset": [
        2860,
        3308
      ],
      "op": "JUMP",
      "path": "13"
    },
    "425": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "426": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D"
    },
    "429": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x615"
    },
    "432": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMP",
      "path": "1"
    },
    "433": {
      "offset": [
        1133,
        1153
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "434": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1133,
        1153
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14F"
    },
    "437": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1133,
        1153
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x69D"
    },
    "440": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1133,
        1153
      ],
      "op": "JUMP",
      "path": "13"
    },
    "441": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "442": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "445": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C7"
    },
    "448": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "449": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "451": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE48"
    },
    "454": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4155,
        4864
      ],
      "op": "JUMP",
      "path": "13"
    },
    "455": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "456": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "459": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4155,
        4864
      ],
      "op": "JUMP",
      "path": "13"
    },
    "460": {
      "offset": [
        967,
        989
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "461": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        967,
        989
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "464": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        967,
        989
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x89A"
    },
    "467": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        967,
        989
      ],
      "op": "JUMP",
      "path": "13"
    },
    "468": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "469": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "472": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A0"
    },
    "475": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMP",
      "path": "1"
    },
    "476": {
      "offset": [
        1215,
        1235
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "477": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x194"
    },
    "480": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8AF"
    },
    "483": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1215,
        1235
      ],
      "op": "JUMP",
      "path": "13"
    },
    "484": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "485": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "488": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F2"
    },
    "491": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "492": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "494": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDF5"
    },
    "497": {
      "fn": "option.setBuyer",
      "jump": "i",
      "offset": [
        2473,
        2587
      ],
      "op": "JUMP",
      "path": "13"
    },
    "498": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "499": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8BF"
    },
    "502": {
      "fn": "option.setBuyer",
      "jump": "i",
      "offset": [
        2473,
        2587
      ],
      "op": "JUMP",
      "path": "13"
    },
    "503": {
      "offset": [
        1068,
        1097
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "504": {
      "fn": "option.setBuyer",
      "offset": [
        1068,
        1097
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14F"
    },
    "507": {
      "fn": "option.setBuyer",
      "offset": [
        1068,
        1097
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x906"
    },
    "510": {
      "fn": "option.setBuyer",
      "jump": "i",
      "offset": [
        1068,
        1097
      ],
      "op": "JUMP",
      "path": "13"
    },
    "511": {
      "offset": [
        996,
        1026
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "512": {
      "fn": "option.setBuyer",
      "offset": [
        996,
        1026
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "515": {
      "fn": "option.setBuyer",
      "offset": [
        996,
        1026
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x915"
    },
    "518": {
      "fn": "option.setBuyer",
      "jump": "i",
      "offset": [
        996,
        1026
      ],
      "op": "JUMP",
      "path": "13"
    },
    "519": {
      "offset": [
        937,
        961
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "520": {
      "fn": "option.setBuyer",
      "offset": [
        937,
        961
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "523": {
      "fn": "option.setBuyer",
      "offset": [
        937,
        961
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x91B"
    },
    "526": {
      "fn": "option.setBuyer",
      "jump": "i",
      "offset": [
        937,
        961
      ],
      "op": "JUMP",
      "path": "13"
    },
    "527": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5209,
        5542
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "528": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5209,
        5542
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "531": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5209,
        5542
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x921"
    },
    "534": {
      "fn": "option.redeemDebtEarly",
      "jump": "i",
      "offset": [
        5209,
        5542
      ],
      "op": "JUMP",
      "path": "13"
    },
    "535": {
      "fn": "option.redeemDebt",
      "offset": [
        4870,
        5203
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "536": {
      "fn": "option.redeemDebt",
      "offset": [
        4870,
        5203
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "539": {
      "fn": "option.redeemDebt",
      "offset": [
        4870,
        5203
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9C0"
    },
    "542": {
      "fn": "option.redeemDebt",
      "jump": "i",
      "offset": [
        4870,
        5203
      ],
      "op": "JUMP",
      "path": "13"
    },
    "543": {
      "offset": [
        1033,
        1060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "544": {
      "fn": "option.redeemDebt",
      "offset": [
        1033,
        1060
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "547": {
      "fn": "option.redeemDebt",
      "offset": [
        1033,
        1060
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA16"
    },
    "550": {
      "fn": "option.redeemDebt",
      "jump": "i",
      "offset": [
        1033,
        1060
      ],
      "op": "JUMP",
      "path": "13"
    },
    "551": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "552": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "555": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x235"
    },
    "558": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "559": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "561": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDF5"
    },
    "564": {
      "fn": "option.setSeller",
      "jump": "i",
      "offset": [
        2593,
        2711
      ],
      "op": "JUMP",
      "path": "13"
    },
    "565": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "566": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA1C"
    },
    "569": {
      "fn": "option.setSeller",
      "jump": "i",
      "offset": [
        2593,
        2711
      ],
      "op": "JUMP",
      "path": "13"
    },
    "570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D"
    },
    "574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x248"
    },
    "577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "580": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF5"
    },
    "583": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMP",
      "path": "1"
    },
    "584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA63"
    },
    "588": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMP",
      "path": "1"
    },
    "589": {
      "offset": [
        1103,
        1126
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1103,
        1126
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14F"
    },
    "593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1103,
        1126
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB1A"
    },
    "596": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1103,
        1126
      ],
      "op": "JUMP",
      "path": "13"
    },
    "597": {
      "offset": [
        1159,
        1180
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1159,
        1180
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1159,
        1180
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "op": "SUB"
    },
    "609": {
      "offset": [
        1159,
        1180
      ],
      "op": "AND",
      "path": "13"
    },
    "610": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1159,
        1180
      ],
      "op": "DUP2",
      "path": "13"
    },
    "611": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1159,
        1180
      ],
      "op": "JUMP",
      "path": "13"
    },
    "612": {
      "fn": "option.excerciseOption",
      "offset": [
        3702,
        4149
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "613": {
      "fn": "option.excerciseOption",
      "offset": [
        3770,
        3775
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 0,
      "value": "0x9"
    },
    "615": {
      "fn": "option.excerciseOption",
      "offset": [
        3770,
        3775
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "fn": "option.excerciseOption",
      "offset": [
        3770,
        3775
      ],
      "op": "AND",
      "path": "13"
    },
    "625": {
      "fn": "option.excerciseOption",
      "offset": [
        3756,
        3766
      ],
      "op": "CALLER",
      "path": "13"
    },
    "626": {
      "branch": 55,
      "fn": "option.excerciseOption",
      "offset": [
        3756,
        3775
      ],
      "op": "EQ",
      "path": "13"
    },
    "627": {
      "fn": "option.excerciseOption",
      "offset": [
        3748,
        3776
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x27B"
    },
    "630": {
      "branch": 55,
      "fn": "option.excerciseOption",
      "offset": [
        3748,
        3776
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "631": {
      "fn": "option.excerciseOption",
      "offset": [
        3748,
        3776
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "633": {
      "fn": "option.excerciseOption",
      "offset": [
        3748,
        3776
      ],
      "op": "DUP1",
      "path": "13"
    },
    "634": {
      "fn": "option.excerciseOption",
      "offset": [
        3748,
        3776
      ],
      "op": "REVERT",
      "path": "13"
    },
    "635": {
      "fn": "option.excerciseOption",
      "offset": [
        3748,
        3776
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "636": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3813
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x1"
    },
    "638": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3813
      ],
      "op": "DUP1",
      "path": "13"
    },
    "639": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3813
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3813
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "646": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3813
      ],
      "op": "DIV",
      "path": "13"
    },
    "647": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3813
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "649": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3813
      ],
      "op": "AND",
      "path": "13"
    },
    "650": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3821
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "651": {
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3821
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "652": {
      "branch": 56,
      "fn": "option.excerciseOption",
      "offset": [
        3795,
        3821
      ],
      "op": "EQ",
      "path": "13"
    },
    "653": {
      "fn": "option.excerciseOption",
      "offset": [
        3787,
        3822
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x295"
    },
    "656": {
      "branch": 56,
      "fn": "option.excerciseOption",
      "offset": [
        3787,
        3822
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "657": {
      "fn": "option.excerciseOption",
      "offset": [
        3787,
        3822
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "659": {
      "fn": "option.excerciseOption",
      "offset": [
        3787,
        3822
      ],
      "op": "DUP1",
      "path": "13"
    },
    "660": {
      "fn": "option.excerciseOption",
      "offset": [
        3787,
        3822
      ],
      "op": "REVERT",
      "path": "13"
    },
    "661": {
      "fn": "option.excerciseOption",
      "offset": [
        3787,
        3822
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "662": {
      "fn": "option.excerciseOption",
      "offset": [
        3859,
        3867
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x2"
    },
    "664": {
      "fn": "option.excerciseOption",
      "offset": [
        3859,
        3867
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "665": {
      "fn": "option.excerciseOption",
      "offset": [
        3840,
        3855
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "666": {
      "fn": "option.excerciseOption",
      "offset": [
        3840,
        3867
      ],
      "op": "GT",
      "path": "13"
    },
    "667": {
      "branch": 57,
      "fn": "option.excerciseOption",
      "offset": [
        3840,
        3867
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "668": {
      "fn": "option.excerciseOption",
      "offset": [
        3832,
        3868
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A4"
    },
    "671": {
      "branch": 57,
      "fn": "option.excerciseOption",
      "offset": [
        3832,
        3868
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "672": {
      "fn": "option.excerciseOption",
      "offset": [
        3832,
        3868
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "674": {
      "fn": "option.excerciseOption",
      "offset": [
        3832,
        3868
      ],
      "op": "DUP1",
      "path": "13"
    },
    "675": {
      "fn": "option.excerciseOption",
      "offset": [
        3832,
        3868
      ],
      "op": "REVERT",
      "path": "13"
    },
    "676": {
      "fn": "option.excerciseOption",
      "offset": [
        3832,
        3868
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "677": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3887
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 3,
      "value": "0x8"
    },
    "679": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3887
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "680": {
      "fn": "option.excerciseOption",
      "offset": [
        3921,
        3927
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "682": {
      "fn": "option.excerciseOption",
      "offset": [
        3921,
        3927
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "683": {
      "fn": "option.excerciseOption",
      "offset": [
        3930,
        3937
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "685": {
      "fn": "option.excerciseOption",
      "offset": [
        3930,
        3937
      ],
      "op": "DUP1",
      "path": "13"
    },
    "686": {
      "fn": "option.excerciseOption",
      "offset": [
        3930,
        3937
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "687": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "689": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "690": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP2",
      "path": "13"
    },
    "699": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3887
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "709": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3887
      ],
      "op": "DUP6",
      "path": "13"
    },
    "710": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3887
      ],
      "op": "AND",
      "path": "13"
    },
    "711": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3887
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "712": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3900
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "717": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3900
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "718": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DE"
    },
    "721": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "722": {
      "fn": "option.excerciseOption",
      "offset": [
        3901,
        3911
      ],
      "op": "CALLER",
      "path": "13"
    },
    "723": {
      "fn": "option.excerciseOption",
      "offset": [
        3901,
        3911
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "724": {
      "fn": "option.excerciseOption",
      "offset": [
        3921,
        3927
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "725": {
      "fn": "option.excerciseOption",
      "offset": [
        3921,
        3927
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "726": {
      "fn": "option.excerciseOption",
      "offset": [
        3921,
        3927
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "727": {
      "fn": "option.excerciseOption",
      "offset": [
        3921,
        3927
      ],
      "op": "AND",
      "path": "13"
    },
    "728": {
      "fn": "option.excerciseOption",
      "offset": [
        3921,
        3927
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "729": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ADD",
      "path": "13"
    },
    "730": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE88"
    },
    "733": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMP",
      "path": "13"
    },
    "734": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "735": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "737": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "739": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "740": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "741": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP4",
      "path": "13"
    },
    "742": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "SUB",
      "path": "13"
    },
    "743": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP2",
      "path": "13"
    },
    "744": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "746": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP8",
      "path": "13"
    },
    "747": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "748": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "749": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "750": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "751": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "752": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F8"
    },
    "755": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "756": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "758": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "759": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "REVERT",
      "path": "13"
    },
    "760": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "761": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "POP",
      "path": "13"
    },
    "762": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "GAS",
      "path": "13"
    },
    "763": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "CALL",
      "path": "13"
    },
    "764": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "765": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "766": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "767": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x30C"
    },
    "770": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "771": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "772": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "774": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "775": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "776": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "777": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "779": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "REVERT",
      "path": "13"
    },
    "780": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "781": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "POP",
      "path": "13"
    },
    "782": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "POP",
      "path": "13"
    },
    "783": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "POP",
      "path": "13"
    },
    "784": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "POP",
      "path": "13"
    },
    "785": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "787": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "788": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "789": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "791": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "NOT",
      "path": "13"
    },
    "792": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "794": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP3",
      "path": "13"
    },
    "795": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ADD",
      "path": "13"
    },
    "796": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "AND",
      "path": "13"
    },
    "797": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP3",
      "path": "13"
    },
    "798": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ADD",
      "path": "13"
    },
    "799": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "800": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "802": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "803": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "POP",
      "path": "13"
    },
    "804": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "DUP2",
      "path": "13"
    },
    "805": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "ADD",
      "path": "13"
    },
    "806": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "807": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x330"
    },
    "810": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "811": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "812": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE10"
    },
    "815": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMP",
      "path": "13"
    },
    "816": {
      "fn": "option.excerciseOption",
      "offset": [
        3878,
        3938
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "820": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3960
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "825": {
      "op": "SHL"
    },
    "826": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3960
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "827": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3960
      ],
      "op": "DIV",
      "path": "13"
    },
    "828": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "830": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3960
      ],
      "op": "AND",
      "path": "13"
    },
    "831": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3968
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "832": {
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3968
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "833": {
      "fn": "option.excerciseOption",
      "offset": [
        3964,
        3968
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "835": {
      "branch": 58,
      "fn": "option.excerciseOption",
      "offset": [
        3952,
        3968
      ],
      "op": "EQ",
      "path": "13"
    },
    "836": {
      "fn": "option.excerciseOption",
      "offset": [
        3948,
        4038
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "837": {
      "fn": "option.excerciseOption",
      "offset": [
        3948,
        4038
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3B0"
    },
    "840": {
      "branch": 58,
      "fn": "option.excerciseOption",
      "offset": [
        3948,
        4038
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "841": {
      "fn": "option.excerciseOption",
      "offset": [
        3989,
        4001
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0xB"
    },
    "843": {
      "fn": "option.excerciseOption",
      "offset": [
        3989,
        4001
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "fn": "option.excerciseOption",
      "offset": [
        3989,
        4001
      ],
      "op": "AND",
      "path": "13"
    },
    "853": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4011
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2E1A7D4D"
    },
    "858": {
      "fn": "option.excerciseOption",
      "offset": [
        4012,
        4026
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x361"
    },
    "861": {
      "fn": "option.excerciseOption",
      "offset": [
        4012,
        4024
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB29"
    },
    "864": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        4012,
        4026
      ],
      "op": "JUMP",
      "path": "13"
    },
    "865": {
      "fn": "option.excerciseOption",
      "offset": [
        4012,
        4026
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "866": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "868": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "869": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP3",
      "path": "13"
    },
    "870": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "875": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "AND",
      "path": "13"
    },
    "876": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "878": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "SHL",
      "path": "13"
    },
    "879": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP2",
      "path": "13"
    },
    "880": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "881": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "883": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "ADD",
      "path": "13"
    },
    "884": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x37D"
    },
    "887": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "888": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "889": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDF"
    },
    "892": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        3983,
        4027
      ],
      "op": "JUMP",
      "path": "13"
    },
    "893": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "894": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "896": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "898": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "899": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP1",
      "path": "13"
    },
    "900": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP4",
      "path": "13"
    },
    "901": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "SUB",
      "path": "13"
    },
    "902": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP2",
      "path": "13"
    },
    "903": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "905": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP8",
      "path": "13"
    },
    "906": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP1",
      "path": "13"
    },
    "907": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "908": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "909": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP1",
      "path": "13"
    },
    "910": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "911": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x397"
    },
    "914": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "915": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "917": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP1",
      "path": "13"
    },
    "918": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "REVERT",
      "path": "13"
    },
    "919": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "920": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "POP",
      "path": "13"
    },
    "921": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "GAS",
      "path": "13"
    },
    "922": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "CALL",
      "path": "13"
    },
    "923": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "924": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP1",
      "path": "13"
    },
    "925": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "926": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3AB"
    },
    "929": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "930": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "931": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "933": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "DUP1",
      "path": "13"
    },
    "934": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "935": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "936": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "938": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "REVERT",
      "path": "13"
    },
    "939": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "940": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "POP",
      "path": "13"
    },
    "941": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "POP",
      "path": "13"
    },
    "942": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "POP",
      "path": "13"
    },
    "943": {
      "fn": "option.excerciseOption",
      "offset": [
        3983,
        4027
      ],
      "op": "POP",
      "path": "13"
    },
    "944": {
      "fn": "option.excerciseOption",
      "offset": [
        3948,
        4038
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "945": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4062
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x7"
    },
    "947": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4062
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "948": {
      "fn": "option.excerciseOption",
      "offset": [
        4099,
        4104
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "950": {
      "fn": "option.excerciseOption",
      "offset": [
        4099,
        4104
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "951": {
      "fn": "option.excerciseOption",
      "offset": [
        4107,
        4116
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "953": {
      "fn": "option.excerciseOption",
      "offset": [
        4107,
        4116
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "954": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "956": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "957": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "962": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "964": {
      "op": "SHL"
    },
    "965": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP2",
      "path": "13"
    },
    "966": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "SUB"
    },
    "975": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4062
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "976": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4062
      ],
      "op": "DUP5",
      "path": "13"
    },
    "977": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4062
      ],
      "op": "AND",
      "path": "13"
    },
    "978": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4062
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "979": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4075
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "984": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4075
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "985": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3EB"
    },
    "988": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "989": {
      "fn": "option.excerciseOption",
      "offset": [
        4084,
        4088
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "990": {
      "fn": "option.excerciseOption",
      "offset": [
        4084,
        4088
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "991": {
      "fn": "option.excerciseOption",
      "offset": [
        4099,
        4104
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "992": {
      "fn": "option.excerciseOption",
      "offset": [
        4099,
        4104
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "993": {
      "fn": "option.excerciseOption",
      "offset": [
        4099,
        4104
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "994": {
      "fn": "option.excerciseOption",
      "offset": [
        4099,
        4104
      ],
      "op": "AND",
      "path": "13"
    },
    "995": {
      "fn": "option.excerciseOption",
      "offset": [
        4099,
        4104
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "996": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "998": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ADD",
      "path": "13"
    },
    "999": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE88"
    },
    "1002": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1003": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1004": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1006": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1008": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1009": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1010": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1011": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "SUB",
      "path": "13"
    },
    "1012": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1013": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1015": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1016": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1017": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1018": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1019": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1020": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1021": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x405"
    },
    "1024": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1025": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1027": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1028": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1029": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1030": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "POP",
      "path": "13"
    },
    "1031": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "GAS",
      "path": "13"
    },
    "1032": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "CALL",
      "path": "13"
    },
    "1033": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1034": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1035": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1036": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x419"
    },
    "1039": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1040": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1041": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1043": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1044": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1045": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1046": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1048": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1049": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1050": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "POP",
      "path": "13"
    },
    "1051": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "POP",
      "path": "13"
    },
    "1052": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "POP",
      "path": "13"
    },
    "1053": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "POP",
      "path": "13"
    },
    "1054": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1056": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1057": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1058": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1060": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "NOT",
      "path": "13"
    },
    "1061": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1063": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1064": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ADD",
      "path": "13"
    },
    "1065": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "AND",
      "path": "13"
    },
    "1066": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1067": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ADD",
      "path": "13"
    },
    "1068": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1069": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1071": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1072": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "POP",
      "path": "13"
    },
    "1073": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1074": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "ADD",
      "path": "13"
    },
    "1075": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1076": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x43D"
    },
    "1079": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1080": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1081": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE10"
    },
    "1084": {
      "fn": "option.excerciseOption",
      "jump": "i",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1085": {
      "fn": "option.excerciseOption",
      "offset": [
        4047,
        4117
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "fn": "option.excerciseOption",
      "offset": [
        4138,
        4142
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x1"
    },
    "1089": {
      "fn": "option.excerciseOption",
      "offset": [
        4127,
        4142
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1090": {
      "fn": "option.excerciseOption",
      "offset": [
        4127,
        4142
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "op": "NOT"
    },
    "1097": {
      "fn": "option.excerciseOption",
      "offset": [
        4127,
        4142
      ],
      "op": "AND",
      "path": "13"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "fn": "option.excerciseOption",
      "offset": [
        4127,
        4142
      ],
      "op": "OR",
      "path": "13"
    },
    "1104": {
      "fn": "option.excerciseOption",
      "offset": [
        4127,
        4142
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1105": {
      "fn": "option.excerciseOption",
      "offset": [
        4127,
        4142
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1106": {
      "fn": "option.excerciseOption",
      "jump": "o",
      "offset": [
        3702,
        4149
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1107": {
      "offset": [
        907,
        930
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1108": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1110": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1111": {
      "fn": "option.excerciseOption",
      "offset": [
        907,
        930
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1112": {
      "fn": "option.excerciseOption",
      "jump": "o",
      "offset": [
        907,
        930
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1113": {
      "offset": [
        1241,
        1268
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1114": {
      "fn": "option.excerciseOption",
      "offset": [
        1241,
        1268
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "1116": {
      "fn": "option.excerciseOption",
      "offset": [
        1241,
        1268
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "op": "SUB"
    },
    "1125": {
      "offset": [
        1241,
        1268
      ],
      "op": "AND",
      "path": "13"
    },
    "1126": {
      "fn": "option.excerciseOption",
      "offset": [
        1241,
        1268
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1127": {
      "fn": "option.excerciseOption",
      "jump": "o",
      "offset": [
        1241,
        1268
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1128": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1129": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x1"
    },
    "1131": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1132": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1133": {
      "fn": "option.expired",
      "offset": [
        2752,
        2756
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1135": {
      "fn": "option.expired",
      "offset": [
        2752,
        2756
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1142": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1143": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "DIV",
      "path": "13"
    },
    "1144": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1146": {
      "fn": "option.expired",
      "offset": [
        2775,
        2793
      ],
      "op": "AND",
      "path": "13"
    },
    "1147": {
      "fn": "option.expired",
      "offset": [
        2775,
        2801
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1148": {
      "fn": "option.expired",
      "offset": [
        2775,
        2801
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1149": {
      "branch": 59,
      "fn": "option.expired",
      "offset": [
        2775,
        2801
      ],
      "op": "EQ",
      "path": "13"
    },
    "1150": {
      "fn": "option.expired",
      "offset": [
        2767,
        2802
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x486"
    },
    "1153": {
      "branch": 59,
      "fn": "option.expired",
      "offset": [
        2767,
        2802
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1154": {
      "fn": "option.expired",
      "offset": [
        2767,
        2802
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1156": {
      "fn": "option.expired",
      "offset": [
        2767,
        2802
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1157": {
      "fn": "option.expired",
      "offset": [
        2767,
        2802
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1158": {
      "fn": "option.expired",
      "offset": [
        2767,
        2802
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "fn": "option.expired",
      "offset": [
        2838,
        2846
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x2"
    },
    "1162": {
      "fn": "option.expired",
      "offset": [
        2838,
        2846
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1163": {
      "fn": "option.expired",
      "offset": [
        2820,
        2835
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "1164": {
      "fn": "option.expired",
      "offset": [
        2820,
        2846
      ],
      "op": "GT",
      "path": "13"
    },
    "1165": {
      "fn": "option.expired",
      "offset": [
        2718,
        2854
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1166": {
      "fn": "option.expired",
      "jump": "o",
      "offset": [
        2718,
        2854
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1167": {
      "fn": "option.depositCollateral",
      "offset": [
        2860,
        3308
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1168": {
      "fn": "option.depositCollateral",
      "offset": [
        2916,
        2934
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x1"
    },
    "1170": {
      "fn": "option.depositCollateral",
      "offset": [
        2916,
        2934
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "fn": "option.depositCollateral",
      "offset": [
        2916,
        2934
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1177": {
      "fn": "option.depositCollateral",
      "offset": [
        2916,
        2934
      ],
      "op": "DIV",
      "path": "13"
    },
    "1178": {
      "fn": "option.depositCollateral",
      "offset": [
        2916,
        2934
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1180": {
      "fn": "option.depositCollateral",
      "offset": [
        2916,
        2934
      ],
      "op": "AND",
      "path": "13"
    },
    "1181": {
      "branch": 60,
      "fn": "option.depositCollateral",
      "offset": [
        2916,
        2943
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1182": {
      "fn": "option.depositCollateral",
      "offset": [
        2908,
        2944
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4A6"
    },
    "1185": {
      "branch": 60,
      "fn": "option.depositCollateral",
      "offset": [
        2908,
        2944
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1186": {
      "fn": "option.depositCollateral",
      "offset": [
        2908,
        2944
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1188": {
      "fn": "option.depositCollateral",
      "offset": [
        2908,
        2944
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1189": {
      "fn": "option.depositCollateral",
      "offset": [
        2908,
        2944
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1190": {
      "fn": "option.depositCollateral",
      "offset": [
        2908,
        2944
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1191": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 10,
      "value": "0x7"
    },
    "1193": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3013
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1194": {
      "fn": "option.depositCollateral",
      "offset": [
        3054,
        3063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1196": {
      "fn": "option.depositCollateral",
      "offset": [
        3054,
        3063
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1197": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1199": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1200": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1207": {
      "op": "SHL"
    },
    "1208": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1209": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "op": "SUB"
    },
    "1218": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3013
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1219": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3013
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1220": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3013
      ],
      "op": "AND",
      "path": "13"
    },
    "1221": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3013
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1222": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3026
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "1227": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3026
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1228": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4DB"
    },
    "1231": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1232": {
      "fn": "option.depositCollateral",
      "offset": [
        3027,
        3037
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1233": {
      "fn": "option.depositCollateral",
      "offset": [
        3027,
        3037
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1234": {
      "fn": "option.depositCollateral",
      "offset": [
        3047,
        3051
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "1235": {
      "fn": "option.depositCollateral",
      "offset": [
        3047,
        3051
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1236": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1238": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ADD",
      "path": "13"
    },
    "1239": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE88"
    },
    "1242": {
      "fn": "option.depositCollateral",
      "jump": "i",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1243": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1244": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1246": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1248": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1249": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1250": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1251": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "SUB",
      "path": "13"
    },
    "1252": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1253": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1255": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1256": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1257": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1258": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1259": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1260": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1261": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4F5"
    },
    "1264": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1265": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1267": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1268": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1269": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1270": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "POP",
      "path": "13"
    },
    "1271": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "GAS",
      "path": "13"
    },
    "1272": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "CALL",
      "path": "13"
    },
    "1273": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1274": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1275": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1276": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x509"
    },
    "1279": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1280": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1281": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1283": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1284": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1285": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1286": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1288": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1289": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1290": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "POP",
      "path": "13"
    },
    "1291": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "POP",
      "path": "13"
    },
    "1292": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "POP",
      "path": "13"
    },
    "1293": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "POP",
      "path": "13"
    },
    "1294": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1296": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1297": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1298": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1300": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "NOT",
      "path": "13"
    },
    "1301": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1303": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1304": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ADD",
      "path": "13"
    },
    "1305": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "AND",
      "path": "13"
    },
    "1306": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1307": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ADD",
      "path": "13"
    },
    "1308": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1309": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1311": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1312": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "POP",
      "path": "13"
    },
    "1313": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1314": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "ADD",
      "path": "13"
    },
    "1315": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1316": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x52D"
    },
    "1319": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1320": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1321": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE10"
    },
    "1324": {
      "fn": "option.depositCollateral",
      "jump": "i",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1325": {
      "fn": "option.depositCollateral",
      "offset": [
        2998,
        3064
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "fn": "option.depositCollateral",
      "offset": [
        3095,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 11,
      "value": "0x1"
    },
    "1329": {
      "fn": "option.depositCollateral",
      "offset": [
        3074,
        3099
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1330": {
      "fn": "option.depositCollateral",
      "offset": [
        3074,
        3099
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "op": "NOT"
    },
    "1337": {
      "fn": "option.depositCollateral",
      "offset": [
        3074,
        3099
      ],
      "op": "AND",
      "path": "13"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "fn": "option.depositCollateral",
      "offset": [
        3074,
        3099
      ],
      "op": "OR",
      "path": "13"
    },
    "1344": {
      "fn": "option.depositCollateral",
      "offset": [
        3074,
        3099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1345": {
      "fn": "option.depositCollateral",
      "offset": [
        3074,
        3099
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1346": {
      "fn": "option.depositCollateral",
      "offset": [
        3118,
        3125
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 12,
      "value": "0x549"
    },
    "1349": {
      "fn": "option.depositCollateral",
      "offset": [
        3118,
        3123
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8A0"
    },
    "1352": {
      "fn": "option.depositCollateral",
      "jump": "i",
      "offset": [
        3118,
        3125
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1353": {
      "fn": "option.depositCollateral",
      "offset": [
        3118,
        3125
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1354": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3115
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "1356": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1357": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "op": "NOT"
    },
    "1367": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "AND",
      "path": "13"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "SUB"
    },
    "1376": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1377": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1378": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1379": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "AND",
      "path": "13"
    },
    "1380": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1381": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1382": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1383": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "OR",
      "path": "13"
    },
    "1384": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1385": {
      "fn": "option.depositCollateral",
      "offset": [
        3110,
        3125
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1386": {
      "fn": "option.depositCollateral",
      "offset": [
        3145,
        3152
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 13,
      "value": "0x571"
    },
    "1389": {
      "fn": "option.depositCollateral",
      "offset": [
        3145,
        3150
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8A0"
    },
    "1392": {
      "fn": "option.depositCollateral",
      "jump": "i",
      "offset": [
        3145,
        3152
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1393": {
      "fn": "option.depositCollateral",
      "offset": [
        3145,
        3152
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1394": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3142
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1396": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1397": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1404": {
      "op": "SHL"
    },
    "1405": {
      "op": "SUB"
    },
    "1406": {
      "op": "NOT"
    },
    "1407": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "AND",
      "path": "13"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1414": {
      "op": "SHL"
    },
    "1415": {
      "op": "SUB"
    },
    "1416": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1417": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1418": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1419": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "AND",
      "path": "13"
    },
    "1420": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1421": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1422": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1423": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "OR",
      "path": "13"
    },
    "1424": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1425": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1426": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1427": {
      "fn": "option.depositCollateral",
      "offset": [
        3136,
        3152
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1428": {
      "fn": "option.depositCollateral",
      "offset": [
        3192,
        3207
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x5"
    },
    "1430": {
      "fn": "option.depositCollateral",
      "offset": [
        3192,
        3207
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1431": {
      "fn": "option.depositCollateral",
      "offset": [
        3174,
        3189
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "1432": {
      "fn": "option.depositCollateral",
      "offset": [
        3174,
        3207
      ],
      "op": "ADD",
      "path": "13"
    },
    "1433": {
      "fn": "option.depositCollateral",
      "offset": [
        3163,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1435": {
      "fn": "option.depositCollateral",
      "offset": [
        3163,
        3207
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1440": {
      "op": "SHL"
    },
    "1441": {
      "fn": "option.depositCollateral",
      "offset": [
        3222,
        3230
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1442": {
      "fn": "option.depositCollateral",
      "offset": [
        3222,
        3230
      ],
      "op": "DIV",
      "path": "13"
    },
    "1443": {
      "fn": "option.depositCollateral",
      "offset": [
        3222,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1445": {
      "fn": "option.depositCollateral",
      "offset": [
        3222,
        3230
      ],
      "op": "AND",
      "path": "13"
    },
    "1446": {
      "fn": "option.depositCollateral",
      "offset": [
        3222,
        3238
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1447": {
      "fn": "option.depositCollateral",
      "offset": [
        3222,
        3238
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "branch": 61,
      "fn": "option.depositCollateral",
      "offset": [
        3222,
        3238
      ],
      "op": "EQ",
      "path": "13"
    },
    "1451": {
      "fn": "option.depositCollateral",
      "offset": [
        3218,
        3302
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1452": {
      "fn": "option.depositCollateral",
      "offset": [
        3218,
        3302
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x613"
    },
    "1455": {
      "branch": 61,
      "fn": "option.depositCollateral",
      "offset": [
        3218,
        3302
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1456": {
      "fn": "option.depositCollateral",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 15,
      "value": "0xB"
    },
    "1458": {
      "fn": "option.depositCollateral",
      "offset": [
        3259,
        3271
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1459": {
      "fn": "option.depositCollateral",
      "offset": [
        3281,
        3290
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1461": {
      "fn": "option.depositCollateral",
      "offset": [
        3281,
        3290
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1462": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1464": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1465": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1474": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "fn": "option.depositCollateral",
      "offset": [
        3259,
        3271
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1484": {
      "fn": "option.depositCollateral",
      "offset": [
        3259,
        3271
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1485": {
      "fn": "option.depositCollateral",
      "offset": [
        3259,
        3271
      ],
      "op": "AND",
      "path": "13"
    },
    "1486": {
      "fn": "option.depositCollateral",
      "offset": [
        3259,
        3271
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1487": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3280
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB6B55F25"
    },
    "1492": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3280
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1493": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5E0"
    },
    "1496": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1497": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1499": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "ADD",
      "path": "13"
    },
    "1500": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDF"
    },
    "1503": {
      "fn": "option.depositCollateral",
      "jump": "i",
      "offset": [
        3253,
        3291
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1504": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1505": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1507": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1509": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1510": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1511": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1512": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "SUB",
      "path": "13"
    },
    "1513": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1514": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1516": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1517": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1518": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1519": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1520": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1521": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1522": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5FA"
    },
    "1525": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1526": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1528": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1529": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1530": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1531": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "POP",
      "path": "13"
    },
    "1532": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "GAS",
      "path": "13"
    },
    "1533": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "CALL",
      "path": "13"
    },
    "1534": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1535": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1536": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1537": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x60E"
    },
    "1540": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1541": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1542": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1544": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1545": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1546": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1547": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1549": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1550": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1551": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "POP",
      "path": "13"
    },
    "1552": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "POP",
      "path": "13"
    },
    "1553": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "POP",
      "path": "13"
    },
    "1554": {
      "fn": "option.depositCollateral",
      "offset": [
        3253,
        3291
      ],
      "op": "POP",
      "path": "13"
    },
    "1555": {
      "fn": "option.depositCollateral",
      "offset": [
        3218,
        3302
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1556": {
      "fn": "option.depositCollateral",
      "jump": "o",
      "offset": [
        2860,
        3308
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1558": {
      "offset": [
        1280,
        1292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61D"
    },
    "1561": {
      "offset": [
        1280,
        1290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB4"
    },
    "1564": {
      "jump": "i",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1565": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1566": {
      "offset": [
        1270,
        1276
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1568": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "SUB"
    },
    "1577": {
      "offset": [
        1270,
        1276
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1578": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "AND",
      "path": "1"
    },
    "1580": {
      "offset": [
        1270,
        1292
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1581": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "AND",
      "path": "1"
    },
    "1582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "EQ",
      "path": "1"
    },
    "1583": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x653"
    },
    "1586": {
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1589": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1598": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1601": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "1"
    },
    "1602": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64A"
    },
    "1605": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1606": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFAA"
    },
    "1609": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1610": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1613": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1614": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1615": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SUB",
      "path": "1"
    },
    "1617": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1618": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1619": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1620": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x1"
    },
    "1622": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1623": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1626": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1628": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1796
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "SUB"
    },
    "1637": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "AND",
      "path": "1"
    },
    "1638": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1672": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1673": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1796
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1674": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1796
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1814
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "1678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "op": "SUB"
    },
    "1688": {
      "op": "NOT"
    },
    "1689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "AND",
      "path": "1"
    },
    "1690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1692": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1693": {
      "offset": [
        1133,
        1153
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1133,
        1153
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "1696": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1133,
        1153
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "SUB"
    },
    "1705": {
      "offset": [
        1133,
        1153
      ],
      "op": "AND",
      "path": "13"
    },
    "1706": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1133,
        1153
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1707": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1133,
        1153
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1708": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1709": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4279,
        4284
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x9"
    },
    "1711": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4279,
        4284
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1712": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4238,
        4245
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1714": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4238,
        4245
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "op": "SUB"
    },
    "1723": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4279,
        4284
      ],
      "op": "AND",
      "path": "13"
    },
    "1724": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4265,
        4275
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1725": {
      "branch": 62,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4265,
        4284
      ],
      "op": "EQ",
      "path": "13"
    },
    "1726": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4257,
        4285
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6C6"
    },
    "1729": {
      "branch": 62,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4257,
        4285
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1730": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4257,
        4285
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1732": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4257,
        4285
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1733": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4257,
        4285
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1734": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4257,
        4285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1735": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4312,
        4319
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 19,
      "value": "0x4"
    },
    "1737": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4312,
        4319
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1738": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4304,
        4308
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1739": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4304,
        4319
      ],
      "op": "GT",
      "path": "13"
    },
    "1740": {
      "branch": 63,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4304,
        4319
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1741": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4296,
        4320
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6D5"
    },
    "1744": {
      "branch": 63,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4296,
        4320
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1745": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4296,
        4320
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1747": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4296,
        4320
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1748": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4296,
        4320
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1749": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4296,
        4320
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1750": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 20,
      "value": "0x1"
    },
    "1752": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1753": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4356
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1760": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4356
      ],
      "op": "DIV",
      "path": "13"
    },
    "1761": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1763": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4356
      ],
      "op": "AND",
      "path": "13"
    },
    "1764": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4364
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1765": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4364
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1766": {
      "branch": 64,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4338,
        4364
      ],
      "op": "EQ",
      "path": "13"
    },
    "1767": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4330,
        4365
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6EF"
    },
    "1770": {
      "branch": 64,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4330,
        4365
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1771": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4330,
        4365
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1773": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4330,
        4365
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1774": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4330,
        4365
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1775": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4330,
        4365
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1776": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4402,
        4410
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 21,
      "value": "0x2"
    },
    "1778": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4402,
        4410
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1779": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4383,
        4398
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "1780": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4383,
        4410
      ],
      "op": "GT",
      "path": "13"
    },
    "1781": {
      "branch": 65,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4383,
        4410
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1782": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4375,
        4411
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6FE"
    },
    "1785": {
      "branch": 65,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4375,
        4411
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1786": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4375,
        4411
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1788": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4375,
        4411
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1789": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4375,
        4411
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1790": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4375,
        4411
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1791": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4470,
        4477
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1793": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4470,
        4477
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1794": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4421,
        4442
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1796": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4421,
        4442
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1797": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4478
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x71A"
    },
    "1800": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1801": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4465
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x714"
    },
    "1804": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4449
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1805": {
      "offset": [
        744,
        749
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2710"
    },
    "1808": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4453
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBB8"
    },
    "1811": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4445,
        4465
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1812": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4465
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1813": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4469
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1814": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4469
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBF9"
    },
    "1817": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4445,
        4478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1818": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4445,
        4478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1819": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4497
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 22,
      "value": "0x8"
    },
    "1821": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4497
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1822": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4511,
        4516
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "1824": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4511,
        4516
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1825": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4526,
        4532
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1827": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4526,
        4532
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1828": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1830": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1831": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1840": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1841": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4421,
        4478
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1842": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4421,
        4478
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4497
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1853": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4497
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1854": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4497
      ],
      "op": "AND",
      "path": "13"
    },
    "1855": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4497
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1856": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4510
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "1861": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4510
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1862": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x758"
    },
    "1865": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1866": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4511,
        4516
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1867": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4511,
        4516
      ],
      "op": "AND",
      "path": "13"
    },
    "1868": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4511,
        4516
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1869": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4526,
        4532
      ],
      "op": "AND",
      "path": "13"
    },
    "1870": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4526,
        4532
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1871": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4535,
        4539
      ],
      "op": "DUP10",
      "path": "13"
    },
    "1872": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4535,
        4539
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1873": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1875": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ADD",
      "path": "13"
    },
    "1876": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE88"
    },
    "1879": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1880": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1881": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1883": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1885": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1886": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1887": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1888": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "SUB",
      "path": "13"
    },
    "1889": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1890": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1892": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1893": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1894": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1895": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1896": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1897": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1898": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x772"
    },
    "1901": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1902": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1904": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1905": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1906": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1907": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "POP",
      "path": "13"
    },
    "1908": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "GAS",
      "path": "13"
    },
    "1909": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "CALL",
      "path": "13"
    },
    "1910": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1911": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1912": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1913": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x786"
    },
    "1916": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1917": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1918": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1920": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1921": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1922": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1923": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1925": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1926": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1927": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "POP",
      "path": "13"
    },
    "1928": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "POP",
      "path": "13"
    },
    "1929": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "POP",
      "path": "13"
    },
    "1930": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "POP",
      "path": "13"
    },
    "1931": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1933": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1934": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1935": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1937": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "NOT",
      "path": "13"
    },
    "1938": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1940": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1941": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ADD",
      "path": "13"
    },
    "1942": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "AND",
      "path": "13"
    },
    "1943": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1944": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ADD",
      "path": "13"
    },
    "1945": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1946": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1948": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1949": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "POP",
      "path": "13"
    },
    "1950": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1951": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "ADD",
      "path": "13"
    },
    "1952": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1953": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7AA"
    },
    "1956": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1957": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1958": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE10"
    },
    "1961": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1962": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1963": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4488,
        4540
      ],
      "op": "POP",
      "path": "13"
    },
    "1964": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4550,
        4567
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1966": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4614
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7C8"
    },
    "1969": {
      "offset": [
        744,
        749
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2710"
    },
    "1972": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x714"
    },
    "1975": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4584,
        4597
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1976": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4579
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1978": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4579
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1979": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4583
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBB8"
    },
    "1982": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4583
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1983": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1984": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1985": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1990": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4598
      ],
      "op": "AND",
      "path": "13"
    },
    "1991": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4570,
        4598
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1992": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4570,
        4614
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1993": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4636
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1995": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4636
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1996": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4550,
        4614
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1997": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4550,
        4614
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2003": {
      "op": "SHL"
    },
    "2004": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4636
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2005": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4636
      ],
      "op": "DIV",
      "path": "13"
    },
    "2006": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4636
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2008": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4636
      ],
      "op": "AND",
      "path": "13"
    },
    "2009": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4644
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2010": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4644
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2011": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4640,
        4644
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2013": {
      "branch": 66,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4628,
        4644
      ],
      "op": "EQ",
      "path": "13"
    },
    "2014": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4624,
        4690
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2015": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4624,
        4690
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7EB"
    },
    "2018": {
      "branch": 66,
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4624,
        4690
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2019": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4659,
        4679
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 23,
      "value": "0x7EB"
    },
    "2022": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4674,
        4678
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2023": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4659,
        4673
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC3B"
    },
    "2026": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4659,
        4679
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2027": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4659,
        4679
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2028": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4714
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 24,
      "value": "0x7"
    },
    "2030": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4714
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2031": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2033": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2034": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2043": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4714
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2053": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4714
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2054": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4714
      ],
      "op": "AND",
      "path": "13"
    },
    "2055": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4714
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2056": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4723
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA9059CBB"
    },
    "2061": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4723
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2062": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x81D"
    },
    "2065": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2066": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4724,
        4734
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2067": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4724,
        4734
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2068": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4736,
        4745
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2069": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4736,
        4745
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2070": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2072": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ADD",
      "path": "13"
    },
    "2073": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEAC"
    },
    "2076": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2077": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2078": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2080": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2082": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2083": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2084": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2085": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "SUB",
      "path": "13"
    },
    "2086": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2087": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2089": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2090": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2091": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2092": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2093": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2094": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2095": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x837"
    },
    "2098": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2099": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2101": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2102": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2103": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2104": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "POP",
      "path": "13"
    },
    "2105": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "GAS",
      "path": "13"
    },
    "2106": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "CALL",
      "path": "13"
    },
    "2107": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2108": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2109": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2110": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x84B"
    },
    "2113": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2114": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2115": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2117": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2118": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2119": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2120": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2122": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2123": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2124": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "POP",
      "path": "13"
    },
    "2125": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "POP",
      "path": "13"
    },
    "2126": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "POP",
      "path": "13"
    },
    "2127": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "POP",
      "path": "13"
    },
    "2128": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2130": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2131": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2132": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2134": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "NOT",
      "path": "13"
    },
    "2135": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2137": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2138": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ADD",
      "path": "13"
    },
    "2139": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "AND",
      "path": "13"
    },
    "2140": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2141": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ADD",
      "path": "13"
    },
    "2142": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2143": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2145": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2146": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "POP",
      "path": "13"
    },
    "2147": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2148": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "ADD",
      "path": "13"
    },
    "2149": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2150": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x86F"
    },
    "2153": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2154": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2155": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE10"
    },
    "2158": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2159": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4699,
        4746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4767,
        4774
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 25,
      "value": "0x4"
    },
    "2163": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4767,
        4774
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2164": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4767,
        4784
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x87D"
    },
    "2167": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4767,
        4784
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2168": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4779,
        4783
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2169": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4767,
        4778
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD39"
    },
    "2172": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4767,
        4784
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2173": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4767,
        4784
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2174": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4757,
        4764
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2176": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4757,
        4784
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2177": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4806,
        4815
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 26,
      "value": "0x3"
    },
    "2179": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4806,
        4815
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2180": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4806,
        4830
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x88D"
    },
    "2183": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4806,
        4830
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2184": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4820,
        4829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2185": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4806,
        4819
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD39"
    },
    "2188": {
      "fn": "option.excerciseOptionPartial",
      "jump": "i",
      "offset": [
        4806,
        4830
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2189": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4806,
        4830
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2190": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4794,
        4803
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2192": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4794,
        4830
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2193": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4847,
        4856
      ],
      "op": "SWAP2",
      "path": "13",
      "statement": 27
    },
    "2194": {
      "op": "POP"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2197": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2198": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2199": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "POP",
      "path": "13"
    },
    "2200": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        4155,
        4864
      ],
      "op": "POP",
      "path": "13"
    },
    "2201": {
      "fn": "option.excerciseOptionPartial",
      "jump": "o",
      "offset": [
        4155,
        4864
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2202": {
      "offset": [
        967,
        989
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2203": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        967,
        989
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2205": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        967,
        989
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2206": {
      "fn": "option.excerciseOptionPartial",
      "offset": [
        967,
        989
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2207": {
      "fn": "option.excerciseOptionPartial",
      "jump": "o",
      "offset": [
        967,
        989
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2208": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2209": {
      "fn": "Ownable.owner",
      "offset": [
        1130,
        1136
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x1"
    },
    "2211": {
      "fn": "Ownable.owner",
      "offset": [
        1130,
        1136
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2218": {
      "op": "SHL"
    },
    "2219": {
      "op": "SUB"
    },
    "2220": {
      "fn": "Ownable.owner",
      "offset": [
        1130,
        1136
      ],
      "op": "AND",
      "path": "1"
    },
    "2221": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2222": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2223": {
      "offset": [
        1215,
        1235
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2224": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "2226": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "offset": [
        1215,
        1235
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2233": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "DIV",
      "path": "13"
    },
    "2234": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2236": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "AND",
      "path": "13"
    },
    "2237": {
      "fn": "Ownable.owner",
      "offset": [
        1215,
        1235
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2238": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1215,
        1235
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2239": {
      "fn": "option.setBuyer",
      "offset": [
        2473,
        2587
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2240": {
      "fn": "option.setBuyer",
      "offset": [
        2548,
        2555
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 29,
      "value": "0x8C7"
    },
    "2243": {
      "fn": "option.setBuyer",
      "offset": [
        2548,
        2553
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8A0"
    },
    "2246": {
      "fn": "option.setBuyer",
      "jump": "i",
      "offset": [
        2548,
        2555
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2247": {
      "fn": "option.setBuyer",
      "offset": [
        2548,
        2555
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "op": "SUB"
    },
    "2256": {
      "fn": "option.setBuyer",
      "offset": [
        2534,
        2555
      ],
      "op": "AND",
      "path": "13"
    },
    "2257": {
      "fn": "option.setBuyer",
      "offset": [
        2534,
        2544
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "op": "SUB"
    },
    "2266": {
      "fn": "option.setBuyer",
      "offset": [
        2534,
        2555
      ],
      "op": "AND",
      "path": "13"
    },
    "2267": {
      "branch": 67,
      "fn": "option.setBuyer",
      "offset": [
        2534,
        2555
      ],
      "op": "EQ",
      "path": "13"
    },
    "2268": {
      "fn": "option.setBuyer",
      "offset": [
        2526,
        2556
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8E4"
    },
    "2271": {
      "branch": 67,
      "fn": "option.setBuyer",
      "offset": [
        2526,
        2556
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2272": {
      "fn": "option.setBuyer",
      "offset": [
        2526,
        2556
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2274": {
      "fn": "option.setBuyer",
      "offset": [
        2526,
        2556
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2275": {
      "fn": "option.setBuyer",
      "offset": [
        2526,
        2556
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2276": {
      "fn": "option.setBuyer",
      "offset": [
        2526,
        2556
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2277": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2571
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 30,
      "value": "0x9"
    },
    "2279": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2280": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2287": {
      "op": "SHL"
    },
    "2288": {
      "op": "SUB"
    },
    "2289": {
      "op": "NOT"
    },
    "2290": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "AND",
      "path": "13"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "op": "SUB"
    },
    "2299": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2300": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2301": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2302": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "AND",
      "path": "13"
    },
    "2303": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2304": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2305": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2306": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "OR",
      "path": "13"
    },
    "2307": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2308": {
      "fn": "option.setBuyer",
      "offset": [
        2566,
        2580
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2309": {
      "fn": "option.setBuyer",
      "jump": "o",
      "offset": [
        2473,
        2587
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2310": {
      "offset": [
        1068,
        1097
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2311": {
      "fn": "option.setBuyer",
      "offset": [
        1068,
        1097
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "2313": {
      "fn": "option.setBuyer",
      "offset": [
        1068,
        1097
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "SUB"
    },
    "2322": {
      "offset": [
        1068,
        1097
      ],
      "op": "AND",
      "path": "13"
    },
    "2323": {
      "fn": "option.setBuyer",
      "offset": [
        1068,
        1097
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2324": {
      "fn": "option.setBuyer",
      "jump": "o",
      "offset": [
        1068,
        1097
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2325": {
      "offset": [
        996,
        1026
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2326": {
      "fn": "option.setBuyer",
      "offset": [
        996,
        1026
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2328": {
      "fn": "option.setBuyer",
      "offset": [
        996,
        1026
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2329": {
      "fn": "option.setBuyer",
      "offset": [
        996,
        1026
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2330": {
      "fn": "option.setBuyer",
      "jump": "o",
      "offset": [
        996,
        1026
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2331": {
      "offset": [
        937,
        961
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2332": {
      "fn": "option.setBuyer",
      "offset": [
        937,
        961
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2334": {
      "fn": "option.setBuyer",
      "offset": [
        937,
        961
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2335": {
      "fn": "option.setBuyer",
      "offset": [
        937,
        961
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2336": {
      "fn": "option.setBuyer",
      "jump": "o",
      "offset": [
        937,
        961
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2337": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5209,
        5542
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2338": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5277,
        5283
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 31,
      "value": "0xA"
    },
    "2340": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5277,
        5283
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "op": "SUB"
    },
    "2349": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5277,
        5283
      ],
      "op": "AND",
      "path": "13"
    },
    "2350": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5263,
        5273
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2351": {
      "branch": 68,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5263,
        5283
      ],
      "op": "EQ",
      "path": "13"
    },
    "2352": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5255,
        5284
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x938"
    },
    "2355": {
      "branch": 68,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5255,
        5284
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2356": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5255,
        5284
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2358": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5255,
        5284
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2359": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5255,
        5284
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2360": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5255,
        5284
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2361": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5317,
        5322
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 32,
      "value": "0x9"
    },
    "2363": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5317,
        5322
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2370": {
      "op": "SHL"
    },
    "2371": {
      "op": "SUB"
    },
    "2372": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5317,
        5322
      ],
      "op": "AND",
      "path": "13"
    },
    "2373": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5303,
        5313
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2374": {
      "branch": 69,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5303,
        5322
      ],
      "op": "EQ",
      "path": "13"
    },
    "2375": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5295,
        5323
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x94F"
    },
    "2378": {
      "branch": 69,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5295,
        5323
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2379": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5295,
        5323
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2381": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5295,
        5323
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2382": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5295,
        5323
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2383": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5295,
        5323
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2384": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5361
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 33,
      "value": "0x1"
    },
    "2386": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5361
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2387": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5361
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5361
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2394": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5361
      ],
      "op": "DIV",
      "path": "13"
    },
    "2395": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5361
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2397": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5361
      ],
      "op": "AND",
      "path": "13"
    },
    "2398": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5369
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2399": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5369
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2400": {
      "branch": 70,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5343,
        5369
      ],
      "op": "EQ",
      "path": "13"
    },
    "2401": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5335,
        5370
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x969"
    },
    "2404": {
      "branch": 70,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5335,
        5370
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2405": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5335,
        5370
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2407": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5335,
        5370
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2408": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5335,
        5370
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2409": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5335,
        5370
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2410": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5388,
        5396
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 34,
      "value": "0x1"
    },
    "2412": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5388,
        5396
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2417": {
      "op": "SHL"
    },
    "2418": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5388,
        5396
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2419": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5388,
        5396
      ],
      "op": "DIV",
      "path": "13"
    },
    "2420": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5388,
        5396
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2422": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5388,
        5396
      ],
      "op": "AND",
      "path": "13"
    },
    "2423": {
      "branch": 71,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5388,
        5405
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2424": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5380,
        5406
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x980"
    },
    "2427": {
      "branch": 71,
      "fn": "option.redeemDebtEarly",
      "offset": [
        5380,
        5406
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2428": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5380,
        5406
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2430": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5380,
        5406
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2431": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5380,
        5406
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2432": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5380,
        5406
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2433": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5427,
        5428
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 35,
      "value": "0x0"
    },
    "2435": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5417,
        5424
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2437": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5417,
        5428
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2438": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5417,
        5428
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2439": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5417,
        5428
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2440": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5454
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 36,
      "value": "0x7"
    },
    "2442": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5454
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2443": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5491,
        5497
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "2445": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5491,
        5497
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2446": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5500,
        5509
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "2448": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5500,
        5509
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2449": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2451": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2452": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2459": {
      "op": "SHL"
    },
    "2460": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2461": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2468": {
      "op": "SHL"
    },
    "2469": {
      "op": "SUB"
    },
    "2470": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5454
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2471": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5454
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2472": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5454
      ],
      "op": "AND",
      "path": "13"
    },
    "2473": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5454
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2474": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "2479": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5467
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2480": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3EB"
    },
    "2483": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2484": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5476,
        5480
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "2485": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5476,
        5480
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2486": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5491,
        5497
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2487": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5491,
        5497
      ],
      "op": "AND",
      "path": "13"
    },
    "2488": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5491,
        5497
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2489": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5500,
        5509
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2490": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5500,
        5509
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2491": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "ADD",
      "path": "13"
    },
    "2492": {
      "fn": "option.redeemDebtEarly",
      "offset": [
        5439,
        5510
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE88"
    },
    "2495": {
      "fn": "option.redeemDebtEarly",
      "jump": "i",
      "offset": [
        5439,
        5510
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2496": {
      "fn": "option.redeemDebt",
      "offset": [
        4870,
        5203
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2497": {
      "fn": "option.redeemDebt",
      "offset": [
        4933,
        4939
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 37,
      "value": "0xA"
    },
    "2499": {
      "fn": "option.redeemDebt",
      "offset": [
        4933,
        4939
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2506": {
      "op": "SHL"
    },
    "2507": {
      "op": "SUB"
    },
    "2508": {
      "fn": "option.redeemDebt",
      "offset": [
        4933,
        4939
      ],
      "op": "AND",
      "path": "13"
    },
    "2509": {
      "fn": "option.redeemDebt",
      "offset": [
        4919,
        4929
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2510": {
      "branch": 72,
      "fn": "option.redeemDebt",
      "offset": [
        4919,
        4939
      ],
      "op": "EQ",
      "path": "13"
    },
    "2511": {
      "fn": "option.redeemDebt",
      "offset": [
        4911,
        4940
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D7"
    },
    "2514": {
      "branch": 72,
      "fn": "option.redeemDebt",
      "offset": [
        4911,
        4940
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2515": {
      "fn": "option.redeemDebt",
      "offset": [
        4911,
        4940
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2517": {
      "fn": "option.redeemDebt",
      "offset": [
        4911,
        4940
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2518": {
      "fn": "option.redeemDebt",
      "offset": [
        4911,
        4940
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2519": {
      "fn": "option.redeemDebt",
      "offset": [
        4911,
        4940
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2520": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4977
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 38,
      "value": "0x1"
    },
    "2522": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4977
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2523": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4977
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4977
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2530": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4977
      ],
      "op": "DIV",
      "path": "13"
    },
    "2531": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4977
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2533": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4977
      ],
      "op": "AND",
      "path": "13"
    },
    "2534": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4985
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2535": {
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4985
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2536": {
      "branch": 73,
      "fn": "option.redeemDebt",
      "offset": [
        4959,
        4985
      ],
      "op": "EQ",
      "path": "13"
    },
    "2537": {
      "fn": "option.redeemDebt",
      "offset": [
        4951,
        4986
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9F1"
    },
    "2540": {
      "branch": 73,
      "fn": "option.redeemDebt",
      "offset": [
        4951,
        4986
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2541": {
      "fn": "option.redeemDebt",
      "offset": [
        4951,
        4986
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2543": {
      "fn": "option.redeemDebt",
      "offset": [
        4951,
        4986
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2544": {
      "fn": "option.redeemDebt",
      "offset": [
        4951,
        4986
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2545": {
      "fn": "option.redeemDebt",
      "offset": [
        4951,
        4986
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2546": {
      "fn": "option.redeemDebt",
      "offset": [
        5004,
        5012
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 39,
      "value": "0x1"
    },
    "2548": {
      "fn": "option.redeemDebt",
      "offset": [
        5004,
        5012
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "fn": "option.redeemDebt",
      "offset": [
        5004,
        5012
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2555": {
      "fn": "option.redeemDebt",
      "offset": [
        5004,
        5012
      ],
      "op": "DIV",
      "path": "13"
    },
    "2556": {
      "fn": "option.redeemDebt",
      "offset": [
        5004,
        5012
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2558": {
      "fn": "option.redeemDebt",
      "offset": [
        5004,
        5012
      ],
      "op": "AND",
      "path": "13"
    },
    "2559": {
      "branch": 74,
      "fn": "option.redeemDebt",
      "offset": [
        5004,
        5021
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2560": {
      "fn": "option.redeemDebt",
      "offset": [
        4996,
        5022
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA08"
    },
    "2563": {
      "branch": 74,
      "fn": "option.redeemDebt",
      "offset": [
        4996,
        5022
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2564": {
      "fn": "option.redeemDebt",
      "offset": [
        4996,
        5022
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2566": {
      "fn": "option.redeemDebt",
      "offset": [
        4996,
        5022
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2567": {
      "fn": "option.redeemDebt",
      "offset": [
        4996,
        5022
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2568": {
      "fn": "option.redeemDebt",
      "offset": [
        4996,
        5022
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2569": {
      "fn": "option.redeemDebt",
      "offset": [
        5059,
        5067
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 40,
      "value": "0x2"
    },
    "2571": {
      "fn": "option.redeemDebt",
      "offset": [
        5059,
        5067
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2572": {
      "fn": "option.redeemDebt",
      "offset": [
        5041,
        5056
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "2573": {
      "branch": 75,
      "fn": "option.redeemDebt",
      "offset": [
        5041,
        5067
      ],
      "op": "GT",
      "path": "13"
    },
    "2574": {
      "fn": "option.redeemDebt",
      "offset": [
        5033,
        5068
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x980"
    },
    "2577": {
      "branch": 75,
      "fn": "option.redeemDebt",
      "offset": [
        5033,
        5068
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2578": {
      "fn": "option.redeemDebt",
      "offset": [
        5033,
        5068
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2580": {
      "fn": "option.redeemDebt",
      "offset": [
        5033,
        5068
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2581": {
      "fn": "option.redeemDebt",
      "offset": [
        5033,
        5068
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2582": {
      "offset": [
        1033,
        1060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2583": {
      "fn": "option.redeemDebt",
      "offset": [
        1033,
        1060
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "2585": {
      "fn": "option.redeemDebt",
      "offset": [
        1033,
        1060
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2586": {
      "fn": "option.redeemDebt",
      "offset": [
        1033,
        1060
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2587": {
      "fn": "option.redeemDebt",
      "jump": "o",
      "offset": [
        1033,
        1060
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2588": {
      "fn": "option.setSeller",
      "offset": [
        2593,
        2711
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2589": {
      "fn": "option.setSeller",
      "offset": [
        2670,
        2677
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 41,
      "value": "0xA24"
    },
    "2592": {
      "fn": "option.setSeller",
      "offset": [
        2670,
        2675
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8A0"
    },
    "2595": {
      "fn": "option.setSeller",
      "jump": "i",
      "offset": [
        2670,
        2677
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2596": {
      "fn": "option.setSeller",
      "offset": [
        2670,
        2677
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "op": "SUB"
    },
    "2605": {
      "fn": "option.setSeller",
      "offset": [
        2656,
        2677
      ],
      "op": "AND",
      "path": "13"
    },
    "2606": {
      "fn": "option.setSeller",
      "offset": [
        2656,
        2666
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2613": {
      "op": "SHL"
    },
    "2614": {
      "op": "SUB"
    },
    "2615": {
      "fn": "option.setSeller",
      "offset": [
        2656,
        2677
      ],
      "op": "AND",
      "path": "13"
    },
    "2616": {
      "branch": 76,
      "fn": "option.setSeller",
      "offset": [
        2656,
        2677
      ],
      "op": "EQ",
      "path": "13"
    },
    "2617": {
      "fn": "option.setSeller",
      "offset": [
        2648,
        2678
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA41"
    },
    "2620": {
      "branch": 76,
      "fn": "option.setSeller",
      "offset": [
        2648,
        2678
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2621": {
      "fn": "option.setSeller",
      "offset": [
        2648,
        2678
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2623": {
      "fn": "option.setSeller",
      "offset": [
        2648,
        2678
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2624": {
      "fn": "option.setSeller",
      "offset": [
        2648,
        2678
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2625": {
      "fn": "option.setSeller",
      "offset": [
        2648,
        2678
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2626": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 42,
      "value": "0xA"
    },
    "2628": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2629": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "op": "NOT"
    },
    "2639": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "AND",
      "path": "13"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2649": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2650": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2651": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "AND",
      "path": "13"
    },
    "2652": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2653": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2654": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2655": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "OR",
      "path": "13"
    },
    "2656": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2657": {
      "fn": "option.setSeller",
      "offset": [
        2688,
        2704
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2658": {
      "fn": "option.setSeller",
      "jump": "o",
      "offset": [
        2593,
        2711
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2659": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2660": {
      "offset": [
        1280,
        1292
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA6B"
    },
    "2663": {
      "offset": [
        1280,
        1290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB4"
    },
    "2666": {
      "jump": "i",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2667": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2668": {
      "offset": [
        1270,
        1276
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2677": {
      "op": "SHL"
    },
    "2678": {
      "op": "SUB"
    },
    "2679": {
      "offset": [
        1270,
        1276
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "AND",
      "path": "1"
    },
    "2682": {
      "offset": [
        1270,
        1292
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "AND",
      "path": "1"
    },
    "2684": {
      "branch": 77,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "EQ",
      "path": "1"
    },
    "2685": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA98"
    },
    "2688": {
      "branch": 77,
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "1"
    },
    "2704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64A"
    },
    "2707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2708": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFAA"
    },
    "2711": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2719": {
      "op": "SHL"
    },
    "2720": {
      "op": "SUB"
    },
    "2721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2071,
        2093
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 43
    },
    "2722": {
      "branch": 78,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2071,
        2093
      ],
      "op": "AND",
      "path": "1"
    },
    "2723": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABE"
    },
    "2726": {
      "branch": 78,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "ADD",
      "path": "1"
    },
    "2742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64A"
    },
    "2745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF23"
    },
    "2749": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2063,
        2136
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 44,
      "value": "0x1"
    },
    "2753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2763": {
      "op": "SHL"
    },
    "2764": {
      "op": "SUB"
    },
    "2765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "AND",
      "path": "1"
    },
    "2768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "AND",
      "path": "1"
    },
    "2770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2807": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2205
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 45,
      "value": "0x1"
    },
    "2811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "op": "NOT"
    },
    "2822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "AND",
      "path": "1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2829": {
      "op": "SHL"
    },
    "2830": {
      "op": "SUB"
    },
    "2831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "AND",
      "path": "1"
    },
    "2835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "OR",
      "path": "1"
    },
    "2839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2841": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2842": {
      "offset": [
        1103,
        1126
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1103,
        1126
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "2845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1103,
        1126
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "op": "SUB"
    },
    "2854": {
      "offset": [
        1103,
        1126
      ],
      "op": "AND",
      "path": "13"
    },
    "2855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1103,
        1126
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2856": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1103,
        1126
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2857": {
      "fn": "option.vaultBalance",
      "offset": [
        3532,
        3692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2858": {
      "fn": "option.vaultBalance",
      "offset": [
        3617,
        3629
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "2860": {
      "fn": "option.vaultBalance",
      "offset": [
        3617,
        3629
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2861": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2863": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2864": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2871": {
      "op": "SHL"
    },
    "2872": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2873": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2874": {
      "fn": "option.vaultBalance",
      "offset": [
        3578,
        3585
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2876": {
      "fn": "option.vaultBalance",
      "offset": [
        3578,
        3585
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2877": {
      "fn": "option.vaultBalance",
      "offset": [
        3578,
        3585
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2878": {
      "fn": "option.vaultBalance",
      "offset": [
        3578,
        3585
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "op": "SUB"
    },
    "2887": {
      "fn": "option.vaultBalance",
      "offset": [
        3617,
        3629
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2888": {
      "fn": "option.vaultBalance",
      "offset": [
        3617,
        3629
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2889": {
      "fn": "option.vaultBalance",
      "offset": [
        3617,
        3629
      ],
      "op": "AND",
      "path": "13"
    },
    "2890": {
      "fn": "option.vaultBalance",
      "offset": [
        3617,
        3629
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2891": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3640
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "2896": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3640
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2897": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB5E"
    },
    "2900": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2901": {
      "fn": "option.vaultBalance",
      "offset": [
        3649,
        3653
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "2902": {
      "fn": "option.vaultBalance",
      "offset": [
        3649,
        3653
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2903": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2905": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ADD",
      "path": "13"
    },
    "2906": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE74"
    },
    "2909": {
      "fn": "option.vaultBalance",
      "jump": "i",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2910": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2911": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2913": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2915": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2916": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2917": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2918": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "SUB",
      "path": "13"
    },
    "2919": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2920": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2921": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2922": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2923": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2924": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2925": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2926": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB76"
    },
    "2929": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2930": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2932": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2933": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2934": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2935": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "POP",
      "path": "13"
    },
    "2936": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "GAS",
      "path": "13"
    },
    "2937": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2938": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2939": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2940": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2941": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB8A"
    },
    "2944": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2945": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2946": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2948": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2949": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2950": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2951": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2953": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2954": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2955": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "POP",
      "path": "13"
    },
    "2956": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "POP",
      "path": "13"
    },
    "2957": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "POP",
      "path": "13"
    },
    "2958": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "POP",
      "path": "13"
    },
    "2959": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2961": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2962": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2963": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2965": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "NOT",
      "path": "13"
    },
    "2966": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2968": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2969": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ADD",
      "path": "13"
    },
    "2970": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "AND",
      "path": "13"
    },
    "2971": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2972": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ADD",
      "path": "13"
    },
    "2973": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2974": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2976": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2977": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "POP",
      "path": "13"
    },
    "2978": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2979": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "ADD",
      "path": "13"
    },
    "2980": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2981": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBAE"
    },
    "2984": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2985": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2986": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE30"
    },
    "2989": {
      "fn": "option.vaultBalance",
      "jump": "i",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2990": {
      "fn": "option.vaultBalance",
      "offset": [
        3611,
        3655
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2991": {
      "fn": "option.vaultBalance",
      "offset": [
        3597,
        3655
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "op": "POP"
    },
    "2994": {
      "fn": "option.vaultBalance",
      "offset": [
        3532,
        3692
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2995": {
      "fn": "option.vaultBalance",
      "jump": "o",
      "offset": [
        3532,
        3692
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2996": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2997": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 46
    },
    "2998": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2999": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3000": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3001": {
      "fn": "SafeMath.mul",
      "offset": [
        2238,
        2245
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3003": {
      "branch": 79,
      "fn": "SafeMath.mul",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3004": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC7"
    },
    "3007": {
      "branch": 79,
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3008": {
      "op": "POP"
    },
    "3009": {
      "fn": "SafeMath.mul",
      "offset": [
        2508,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 47,
      "value": "0x0"
    },
    "3011": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x894"
    },
    "3014": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3015": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3016": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3017": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3018": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "MUL",
      "path": "3"
    },
    "3019": {
      "fn": "SafeMath.mul",
      "offset": [
        2546,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3020": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3021": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3022": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3023": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 48,
      "value": "0xBD4"
    },
    "3026": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3027": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3028": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3029": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "DIV",
      "path": "3"
    },
    "3030": {
      "branch": 80,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2575
      ],
      "op": "EQ",
      "path": "3"
    },
    "3031": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "3034": {
      "branch": 80,
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3035": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3037": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3044": {
      "op": "SHL"
    },
    "3045": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3046": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3047": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3049": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "3050": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64A"
    },
    "3053": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3054": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF69"
    },
    "3057": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3058": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3059": {
      "fn": "SafeMath.mul",
      "offset": [
        2631,
        2632
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 49
    },
    "3060": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "op": "POP"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3065": {
      "fn": "SafeMath.div",
      "offset": [
        3101,
        3231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3066": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3068": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 50,
      "value": "0xBF2"
    },
    "3071": {
      "fn": "SafeMath.div",
      "offset": [
        3189,
        3190
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3072": {
      "fn": "SafeMath.div",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3073": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3075": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3076": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3077": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3079": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "3080": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3082": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3083": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3084": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "3086": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3087": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3088": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3090": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "3091": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "3124": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3125": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3126": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "POP",
      "path": "3"
    },
    "3127": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3188
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD7B"
    },
    "3130": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3185,
        3224
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3131": {
      "fn": "option.withdrawAmount",
      "offset": [
        3314,
        3526
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3132": {
      "fn": "option.withdrawAmount",
      "offset": [
        3374,
        3393
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3134": {
      "fn": "option.withdrawAmount",
      "offset": [
        3396,
        3468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD2"
    },
    "3137": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "3139": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3141": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3142": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3143": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3144": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "3147": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "EXP",
      "path": "13"
    },
    "3148": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3149": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "DIV",
      "path": "13"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3156": {
      "op": "SHL"
    },
    "3157": {
      "op": "SUB"
    },
    "3158": {
      "fn": "option.withdrawAmount",
      "offset": [
        3435,
        3447
      ],
      "op": "AND",
      "path": "13"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "op": "SUB"
    },
    "3167": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3465
      ],
      "op": "AND",
      "path": "13"
    },
    "3168": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3465
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3D68175C"
    },
    "3173": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3175": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3176": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3177": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "3182": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "AND",
      "path": "13"
    },
    "3183": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "3185": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "SHL",
      "path": "13"
    },
    "3186": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3187": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3188": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3190": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ADD",
      "path": "13"
    },
    "3191": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3193": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3195": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3196": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3197": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3198": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "SUB",
      "path": "13"
    },
    "3199": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3200": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3201": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3202": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3203": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3204": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3205": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3206": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC8E"
    },
    "3209": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3210": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3212": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3213": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3214": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3215": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "POP",
      "path": "13"
    },
    "3216": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "GAS",
      "path": "13"
    },
    "3217": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "3218": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3219": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3220": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3221": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCA2"
    },
    "3224": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3225": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3226": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3228": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3229": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3230": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3231": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3233": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3234": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3235": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "POP",
      "path": "13"
    },
    "3236": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "POP",
      "path": "13"
    },
    "3237": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "POP",
      "path": "13"
    },
    "3238": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "POP",
      "path": "13"
    },
    "3239": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3241": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3242": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3243": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3245": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "NOT",
      "path": "13"
    },
    "3246": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3248": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3249": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ADD",
      "path": "13"
    },
    "3250": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "AND",
      "path": "13"
    },
    "3251": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3252": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ADD",
      "path": "13"
    },
    "3253": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3254": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3256": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3257": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "POP",
      "path": "13"
    },
    "3258": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3259": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "ADD",
      "path": "13"
    },
    "3260": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3261": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCC6"
    },
    "3264": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3265": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3266": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE30"
    },
    "3269": {
      "fn": "option.withdrawAmount",
      "jump": "i",
      "offset": [
        3429,
        3467
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3270": {
      "fn": "option.withdrawAmount",
      "offset": [
        3429,
        3467
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3271": {
      "fn": "option.withdrawAmount",
      "offset": [
        3396,
        3424
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x714"
    },
    "3274": {
      "fn": "option.withdrawAmount",
      "offset": [
        3396,
        3403
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3275": {
      "offset": [
        790,
        795
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2710"
    },
    "3278": {
      "fn": "option.withdrawAmount",
      "offset": [
        3396,
        3407
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBB8"
    },
    "3281": {
      "fn": "option.withdrawAmount",
      "jump": "i",
      "offset": [
        3396,
        3424
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3282": {
      "fn": "option.withdrawAmount",
      "offset": [
        3396,
        3468
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3283": {
      "fn": "option.withdrawAmount",
      "offset": [
        3484,
        3496
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 51,
      "value": "0xB"
    },
    "3285": {
      "fn": "option.withdrawAmount",
      "offset": [
        3484,
        3496
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3286": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3288": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3289": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3296": {
      "op": "SHL"
    },
    "3297": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3298": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3299": {
      "fn": "option.withdrawAmount",
      "offset": [
        3374,
        3468
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3300": {
      "fn": "option.withdrawAmount",
      "offset": [
        3374,
        3468
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3308": {
      "op": "SHL"
    },
    "3309": {
      "op": "SUB"
    },
    "3310": {
      "fn": "option.withdrawAmount",
      "offset": [
        3484,
        3496
      ],
      "op": "AND",
      "path": "13"
    },
    "3311": {
      "fn": "option.withdrawAmount",
      "offset": [
        3484,
        3496
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3312": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3506
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2E1A7D4D"
    },
    "3317": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3506
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3318": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD03"
    },
    "3321": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3322": {
      "fn": "option.withdrawAmount",
      "offset": [
        3374,
        3468
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3323": {
      "fn": "option.withdrawAmount",
      "offset": [
        3374,
        3468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3324": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3326": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "ADD",
      "path": "13"
    },
    "3327": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDF"
    },
    "3330": {
      "fn": "option.withdrawAmount",
      "jump": "i",
      "offset": [
        3478,
        3519
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3331": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3332": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3334": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3336": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3337": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3338": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3339": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "SUB",
      "path": "13"
    },
    "3340": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3341": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3343": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3344": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3345": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3346": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3347": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3348": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3349": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD1D"
    },
    "3352": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3353": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3355": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3356": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3357": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3358": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "POP",
      "path": "13"
    },
    "3359": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "GAS",
      "path": "13"
    },
    "3360": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "CALL",
      "path": "13"
    },
    "3361": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3362": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3363": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3364": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD31"
    },
    "3367": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3368": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3369": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3371": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3372": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3373": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3374": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3376": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3377": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3378": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "POP",
      "path": "13"
    },
    "3379": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "POP",
      "path": "13"
    },
    "3380": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "POP",
      "path": "13"
    },
    "3381": {
      "fn": "option.withdrawAmount",
      "offset": [
        3478,
        3519
      ],
      "op": "POP",
      "path": "13"
    },
    "3382": {
      "fn": "option.withdrawAmount",
      "offset": [
        3314,
        3526
      ],
      "op": "POP",
      "path": "13"
    },
    "3383": {
      "fn": "option.withdrawAmount",
      "offset": [
        3314,
        3526
      ],
      "op": "POP",
      "path": "13"
    },
    "3384": {
      "fn": "option.withdrawAmount",
      "jump": "o",
      "offset": [
        3314,
        3526
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3385": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3386": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3388": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 52,
      "value": "0xBF2"
    },
    "3391": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3392": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3393": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3395": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3396": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3397": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3399": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "3400": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3402": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3403": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3404": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "3406": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3407": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3408": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3410": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "3411": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "3444": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3445": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3446": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "3447": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB2"
    },
    "3450": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3451": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3452": {
      "fn": "SafeMath.div",
      "offset": [
        3799,
        3806
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3454": {
      "fn": "SafeMath.div",
      "offset": [
        3833,
        3845
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 53
    },
    "3455": {
      "branch": 81,
      "fn": "SafeMath.div",
      "offset": [
        3826,
        3831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3456": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9C"
    },
    "3459": {
      "branch": 81,
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3460": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3462": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3469": {
      "op": "SHL"
    },
    "3470": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3471": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3472": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3474": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "3475": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64A"
    },
    "3478": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3479": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3480": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xED0"
    },
    "3483": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3484": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3485": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "3486": {
      "fn": "SafeMath.div",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3488": {
      "fn": "SafeMath.div",
      "offset": [
        3872,
        3873
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3489": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3869
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3490": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3491": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA8"
    },
    "3494": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3495": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3496": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3497": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DIV",
      "path": "3"
    },
    "3498": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3499": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3500": {
      "op": "POP"
    },
    "3501": {
      "op": "POP"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3506": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3507": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3509": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 54
    },
    "3510": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3511": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3512": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "3513": {
      "branch": 82,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3514": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD6"
    },
    "3517": {
      "branch": 82,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3518": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3520": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3527": {
      "op": "SHL"
    },
    "3528": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3529": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3530": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3532": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "3533": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64A"
    },
    "3536": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3537": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3538": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xED0"
    },
    "3541": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3542": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3547": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "3548": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3549": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "DUP1"
    },
    "3552": {
      "op": "CALLDATALOAD"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "op": "DUP2"
    },
    "3562": {
      "op": "AND"
    },
    "3563": {
      "op": "DUP2"
    },
    "3564": {
      "op": "EQ"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0x894"
    },
    "3568": {
      "op": "JUMPI"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3571": {
      "op": "DUP1"
    },
    "3572": {
      "op": "REVERT"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3578": {
      "op": "DUP3"
    },
    "3579": {
      "op": "DUP5"
    },
    "3580": {
      "op": "SUB"
    },
    "3581": {
      "op": "SLT"
    },
    "3582": {
      "op": "ISZERO"
    },
    "3583": {
      "op": "PUSH2",
      "value": "0xE06"
    },
    "3586": {
      "op": "JUMPI"
    },
    "3587": {
      "op": "DUP1"
    },
    "3588": {
      "op": "DUP2"
    },
    "3589": {
      "op": "REVERT"
    },
    "3590": {
      "op": "JUMPDEST"
    },
    "3591": {
      "op": "PUSH2",
      "value": "0xBF2"
    },
    "3594": {
      "op": "DUP4"
    },
    "3595": {
      "op": "DUP4"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3599": {
      "op": "JUMP"
    },
    "3600": {
      "op": "JUMPDEST"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3605": {
      "op": "DUP3"
    },
    "3606": {
      "op": "DUP5"
    },
    "3607": {
      "op": "SUB"
    },
    "3608": {
      "op": "SLT"
    },
    "3609": {
      "op": "ISZERO"
    },
    "3610": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3613": {
      "op": "JUMPI"
    },
    "3614": {
      "op": "DUP1"
    },
    "3615": {
      "op": "DUP2"
    },
    "3616": {
      "op": "REVERT"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "DUP2"
    },
    "3619": {
      "op": "MLOAD"
    },
    "3620": {
      "op": "DUP1"
    },
    "3621": {
      "op": "ISZERO"
    },
    "3622": {
      "op": "ISZERO"
    },
    "3623": {
      "op": "DUP2"
    },
    "3624": {
      "op": "EQ"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0xBF2"
    },
    "3628": {
      "op": "JUMPI"
    },
    "3629": {
      "op": "DUP2"
    },
    "3630": {
      "op": "DUP3"
    },
    "3631": {
      "op": "REVERT"
    },
    "3632": {
      "op": "JUMPDEST"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3637": {
      "op": "DUP3"
    },
    "3638": {
      "op": "DUP5"
    },
    "3639": {
      "op": "SUB"
    },
    "3640": {
      "op": "SLT"
    },
    "3641": {
      "op": "ISZERO"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE41"
    },
    "3645": {
      "op": "JUMPI"
    },
    "3646": {
      "op": "DUP1"
    },
    "3647": {
      "op": "DUP2"
    },
    "3648": {
      "op": "REVERT"
    },
    "3649": {
      "op": "JUMPDEST"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "op": "MLOAD"
    },
    "3652": {
      "op": "SWAP2"
    },
    "3653": {
      "op": "SWAP1"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "JUMP"
    },
    "3656": {
      "op": "JUMPDEST"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3659": {
      "op": "DUP1"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3662": {
      "op": "DUP4"
    },
    "3663": {
      "op": "DUP6"
    },
    "3664": {
      "op": "SUB"
    },
    "3665": {
      "op": "SLT"
    },
    "3666": {
      "op": "ISZERO"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xE5A"
    },
    "3670": {
      "op": "JUMPI"
    },
    "3671": {
      "op": "DUP1"
    },
    "3672": {
      "op": "DUP2"
    },
    "3673": {
      "op": "REVERT"
    },
    "3674": {
      "op": "JUMPDEST"
    },
    "3675": {
      "op": "DUP3"
    },
    "3676": {
      "op": "CALLDATALOAD"
    },
    "3677": {
      "op": "SWAP2"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "op": "PUSH2",
      "value": "0xE6B"
    },
    "3682": {
      "op": "DUP5"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3685": {
      "op": "DUP6"
    },
    "3686": {
      "op": "ADD"
    },
    "3687": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3690": {
      "op": "JUMP"
    },
    "3691": {
      "op": "JUMPDEST"
    },
    "3692": {
      "op": "SWAP1"
    },
    "3693": {
      "op": "POP"
    },
    "3694": {
      "op": "SWAP3"
    },
    "3695": {
      "op": "POP"
    },
    "3696": {
      "op": "SWAP3"
    },
    "3697": {
      "op": "SWAP1"
    },
    "3698": {
      "op": "POP"
    },
    "3699": {
      "op": "JUMP"
    },
    "3700": {
      "op": "JUMPDEST"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "op": "SUB"
    },
    "3709": {
      "op": "SWAP2"
    },
    "3710": {
      "op": "SWAP1"
    },
    "3711": {
      "op": "SWAP2"
    },
    "3712": {
      "op": "AND"
    },
    "3713": {
      "op": "DUP2"
    },
    "3714": {
      "op": "MSTORE"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "SWAP1"
    },
    "3719": {
      "op": "JUMP"
    },
    "3720": {
      "op": "JUMPDEST"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3727": {
      "op": "SHL"
    },
    "3728": {
      "op": "SUB"
    },
    "3729": {
      "op": "SWAP4"
    },
    "3730": {
      "op": "DUP5"
    },
    "3731": {
      "op": "AND"
    },
    "3732": {
      "op": "DUP2"
    },
    "3733": {
      "op": "MSTORE"
    },
    "3734": {
      "op": "SWAP2"
    },
    "3735": {
      "op": "SWAP1"
    },
    "3736": {
      "op": "SWAP3"
    },
    "3737": {
      "op": "AND"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3740": {
      "op": "DUP3"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "MSTORE"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3745": {
      "op": "DUP2"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "op": "SWAP2"
    },
    "3748": {
      "op": "SWAP1"
    },
    "3749": {
      "op": "SWAP2"
    },
    "3750": {
      "op": "MSTORE"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "op": "SWAP1"
    },
    "3755": {
      "op": "JUMP"
    },
    "3756": {
      "op": "JUMPDEST"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3763": {
      "op": "SHL"
    },
    "3764": {
      "op": "SUB"
    },
    "3765": {
      "op": "SWAP3"
    },
    "3766": {
      "op": "SWAP1"
    },
    "3767": {
      "op": "SWAP3"
    },
    "3768": {
      "op": "AND"
    },
    "3769": {
      "op": "DUP3"
    },
    "3770": {
      "op": "MSTORE"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3773": {
      "op": "DUP3"
    },
    "3774": {
      "op": "ADD"
    },
    "3775": {
      "op": "MSTORE"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3778": {
      "op": "ADD"
    },
    "3779": {
      "op": "SWAP1"
    },
    "3780": {
      "op": "JUMP"
    },
    "3781": {
      "op": "JUMPDEST"
    },
    "3782": {
      "op": "SWAP1"
    },
    "3783": {
      "op": "ISZERO"
    },
    "3784": {
      "op": "ISZERO"
    },
    "3785": {
      "op": "DUP2"
    },
    "3786": {
      "op": "MSTORE"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "SWAP1"
    },
    "3791": {
      "op": "JUMP"
    },
    "3792": {
      "op": "JUMPDEST"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3797": {
      "op": "DUP1"
    },
    "3798": {
      "op": "DUP4"
    },
    "3799": {
      "op": "MSTORE"
    },
    "3800": {
      "op": "DUP4"
    },
    "3801": {
      "op": "MLOAD"
    },
    "3802": {
      "op": "DUP1"
    },
    "3803": {
      "op": "DUP3"
    },
    "3804": {
      "op": "DUP6"
    },
    "3805": {
      "op": "ADD"
    },
    "3806": {
      "op": "MSTORE"
    },
    "3807": {
      "op": "DUP3"
    },
    "3808": {
      "op": "JUMPDEST"
    },
    "3809": {
      "op": "DUP2"
    },
    "3810": {
      "op": "DUP2"
    },
    "3811": {
      "op": "LT"
    },
    "3812": {
      "op": "ISZERO"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3816": {
      "op": "JUMPI"
    },
    "3817": {
      "op": "DUP6"
    },
    "3818": {
      "op": "DUP2"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "op": "DUP4"
    },
    "3821": {
      "op": "ADD"
    },
    "3822": {
      "op": "MLOAD"
    },
    "3823": {
      "op": "DUP6"
    },
    "3824": {
      "op": "DUP3"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "MSTORE"
    },
    "3830": {
      "op": "DUP3"
    },
    "3831": {
      "op": "ADD"
    },
    "3832": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "3835": {
      "op": "JUMP"
    },
    "3836": {
      "op": "JUMPDEST"
    },
    "3837": {
      "op": "DUP2"
    },
    "3838": {
      "op": "DUP2"
    },
    "3839": {
      "op": "GT"
    },
    "3840": {
      "op": "ISZERO"
    },
    "3841": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "3844": {
      "op": "JUMPI"
    },
    "3845": {
      "op": "DUP4"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3848": {
      "op": "DUP4"
    },
    "3849": {
      "op": "DUP8"
    },
    "3850": {
      "op": "ADD"
    },
    "3851": {
      "op": "ADD"
    },
    "3852": {
      "op": "MSTORE"
    },
    "3853": {
      "op": "JUMPDEST"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3857": {
      "op": "ADD"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3860": {
      "op": "NOT"
    },
    "3861": {
      "op": "AND"
    },
    "3862": {
      "op": "SWAP3"
    },
    "3863": {
      "op": "SWAP1"
    },
    "3864": {
      "op": "SWAP3"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3868": {
      "op": "ADD"
    },
    "3869": {
      "op": "SWAP4"
    },
    "3870": {
      "op": "SWAP3"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "op": "POP"
    },
    "3874": {
      "op": "JUMP"
    },
    "3875": {
      "op": "JUMPDEST"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3878": {
      "op": "DUP1"
    },
    "3879": {
      "op": "DUP3"
    },
    "3880": {
      "op": "MSTORE"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3883": {
      "op": "SWAP1"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3922": {
      "op": "DUP3"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3934": {
      "op": "SHL"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3937": {
      "op": "DUP3"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "op": "MSTORE"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3942": {
      "op": "ADD"
    },
    "3943": {
      "op": "SWAP1"
    },
    "3944": {
      "op": "JUMP"
    },
    "3945": {
      "op": "JUMPDEST"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3948": {
      "op": "DUP1"
    },
    "3949": {
      "op": "DUP3"
    },
    "3950": {
      "op": "MSTORE"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3953": {
      "op": "SWAP1"
    },
    "3954": {
      "op": "DUP3"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "MSTORE"
    },
    "3957": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x77"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4002": {
      "op": "DUP3"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4007": {
      "op": "ADD"
    },
    "4008": {
      "op": "SWAP1"
    },
    "4009": {
      "op": "JUMP"
    },
    "4010": {
      "op": "JUMPDEST"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4013": {
      "op": "DUP1"
    },
    "4014": {
      "op": "DUP3"
    },
    "4015": {
      "op": "MSTORE"
    },
    "4016": {
      "op": "DUP2"
    },
    "4017": {
      "op": "DUP2"
    },
    "4018": {
      "op": "ADD"
    },
    "4019": {
      "op": "MSTORE"
    },
    "4020": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "ADD"
    },
    "4057": {
      "op": "MSTORE"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "op": "SWAP1"
    },
    "4062": {
      "op": "JUMP"
    },
    "4063": {
      "op": "JUMPDEST"
    },
    "4064": {
      "op": "SWAP1"
    },
    "4065": {
      "op": "DUP2"
    },
    "4066": {
      "op": "MSTORE"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "SWAP1"
    },
    "4071": {
      "op": "JUMP"
    }
  },
  "sha1": "b19edcc7aef7509c38418c9385067efc422d9177",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport {\n    SafeERC20,\n    SafeMath,\n    IERC20,\n    Address\n} from \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {Math} from \"@openzeppelin/contracts/math/Math.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"../interfaces/uniswap.sol\";\nimport \"../interfaces/vaults.sol\";\nimport \"./base.sol\";\n\n\ncontract option is ReentrancyGuard, Ownable {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n    uint256 constant decimalAdj = 10000;\n    uint256 constant vaultDecimalAdj = 10000;\n\n    bool collateralProvided;\n    bool isRepaid;\n    bool buyerRightsOnSale;\n    bool sellerRightsOnSale;\n    uint256 public deadline; \n    uint256 public collatAmt;\n    uint256 public amtOwed; \n    uint256 public timeToExcercise; \n    uint256 public mintDeadline; \n\n    IERC20 public collateralToken;\n    IERC20 public debtToken; \n    address public buyer;\n    address public seller; \n    //address public owner;\n    bool public useVault;\n    address public vaultAddress;\n\n    /*\n    Simple option contract that can act as call / put option \n    owner creates contract by depositing collateral \n    owner can then sell rights to buyer who can swap debt token for collateral at some pre set value\n    owner can sell rights to seller who either receives debt token when option excercised or can \n\n    buyer = right to excercise option\n    seller = can redeem at expiry or receives debt tokens if lender excercises option\n    */\n\n    constructor(\n        address _collateral, \n        address _debt, \n        uint256 _collatAmt, \n        uint256 _amtOwed, \n        uint256 _timeToMint,\n        uint256 _timeToRepay, \n        address _vault, \n        bool _useVault ) public {\n        //owner = _owner;\n        collateralToken = IERC20(_collateral);\n        debtToken = IERC20(_debt); \n        collatAmt = _collatAmt; \n        amtOwed = _amtOwed; \n        timeToExcercise = _timeToRepay;\n        mintDeadline = block.timestamp + _timeToMint;\n        collateralProvided = false;\n        isRepaid = false; \n        useVault = _useVault;\n        vaultAddress = _vault;\n        if (useVault == true){\n            collateralToken.approve(vaultAddress,collatAmt);\n        }\n    }\n\n    function setBuyer(address _buyer) external {\n        require(msg.sender == owner());\n        buyer = _buyer;\n    }\n\n    function setSeller(address _seller) external {\n        require(msg.sender == owner());\n        seller = _seller;\n    }\n\n\n    function expired() public returns(bool){\n        require(collateralProvided == true); \n        return(block.timestamp > deadline);\n    }\n\n    function depositCollateral() external {\n        require(collateralProvided == false); \n        //require(msg.sender == owner()); \n        collateralToken.transferFrom(msg.sender, address(this), collatAmt);\n        collateralProvided = true; \n        buyer = owner(); \n        seller = owner(); \n        deadline = block.timestamp + timeToExcercise; \n        if (useVault == true){\n            vault(vaultAddress).deposit(collatAmt);\n        }\n    }\n\n    function withdrawAmount(uint256 _amount) internal {\n        uint256 withdrawAmt = _amount.mul(vaultDecimalAdj).div(vault(vaultAddress).getPricePerShare());\n        vault(vaultAddress).withdraw(withdrawAmt);\n    }\n\n    function vaultBalance() internal view returns(uint256) {\n        uint256 bal = vault(vaultAddress).balanceOf(address(this));\n        return(bal);\n        \n    }\n    \n    function excerciseOption() external {\n        require(msg.sender == buyer); \n        require(collateralProvided == true);\n        require(block.timestamp <= deadline);\n        debtToken.transferFrom(msg.sender, address(seller), amtOwed);\n        if (useVault == true){\n            vault(vaultAddress).withdraw(vaultBalance());\n        }\n        collateralToken.transferFrom(address(this), address(buyer), collatAmt);\n        isRepaid = true;\n    }\n\n    function excerciseOptionPartial(uint256 _amt, address _recipient) external returns(uint256) {\n        require(msg.sender == buyer); \n        require(_amt <= amtOwed);\n        require(collateralProvided == true);\n        require(block.timestamp <= deadline);\n        uint256 percentRepaid = _amt.mul(decimalAdj).div(amtOwed);\n        debtToken.transferFrom(buyer, address(seller), _amt);\n        uint256 redeemAmt = collatAmt.mul(percentRepaid).div(decimalAdj);\n        if (useVault == true){\n            withdrawAmount(_amt);\n        }\n        collateralToken.transfer(_recipient, redeemAmt);\n\n        amtOwed = amtOwed.sub(_amt);\n        collatAmt = collatAmt.sub(redeemAmt);\n        return(redeemAmt);\n    }\n\n    function redeemDebt() external {\n        require(msg.sender == seller); \n        require(collateralProvided == true);\n        require(isRepaid == false); \n        require(block.timestamp > deadline);\n        amtOwed = 0; \n        collateralToken.transferFrom(address(this), address(seller), collatAmt);\n        isRepaid = true;\n    }\n\n    function redeemDebtEarly() external {\n        require(msg.sender == seller); \n        require(msg.sender == buyer); \n\n        require(collateralProvided == true);\n        require(isRepaid == false); \n        amtOwed = 0; \n        collateralToken.transferFrom(address(this), address(seller), collatAmt);\n        isRepaid = true;\n    }\n\n}\n",
  "sourceMap": "569:4976:13:-:0;;;1729:738;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1628:1:8;1743:7;:22;;;885:12:1;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:1;-1:-1:-1;;;;;907:18:1;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:1;-1:-1:-1;;940:43:1;;-1:-1:-1;;940:43:1;-1:-1:-1;2005:15:13;:37;;-1:-1:-1;;;;;2005:37:13;;;-1:-1:-1;;;;;;2005:37:13;;;;;;;2052:9;:25;;;;;;;;;;;2088:9;:22;;;-1:-1:-1;2121:18:13;;;-1:-1:-1;2150:30:13;;;2205:15;:29;;2190:12;:44;2005:37;2244:26;;-1:-1:-1;;;;2280:16:13;;;2307:8;:20;;;;;-1:-1:-1;;;2307:20:13;;;-1:-1:-1;;;;2307:20:13;;;;;;;;;;;;2337:12;:21;;;;;;;;;;;;;;;;2372:8;;;2244:26;2372:8;:16;;;2368:93;;;2403:15;;2427:12;;2440:9;;2403:47;;-1:-1:-1;;;2403:47:13;;-1:-1:-1;;;;;2403:15:13;;;;:23;;:47;;2427:12;;;2403:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2368:93;1729:738;;;;;;;;569:4976;;590:104:0;677:10;590:104;:::o;422:1214:-1:-;;;;;;;;;653:3;641:9;632:7;628:23;624:33;621:2;;;-1:-1;;660:12;621:2;89:6;83:13;101:33;128:5;101:33;:::i;:::-;823:2;873:22;;83:13;712:74;;-1:-1;101:33;83:13;101:33;:::i;:::-;831:74;;;;942:2;996:9;992:22;359:13;950:74;;1061:2;1115:9;1111:22;359:13;1069:74;;1180:3;1235:9;1231:22;359:13;1189:74;;1300:3;1355:9;1351:22;359:13;1309:74;;1420:3;1475:9;1471:22;83:13;101:33;128:5;101:33;:::i;:::-;1540:3;1588:22;;221:13;1429:74;;-1:-1;239:30;221:13;239:30;:::i;:::-;1549:71;;;;615:1021;;;;;;;;;;;:::o;1643:257::-;;1755:2;1743:9;1734:7;1730:23;1726:32;1723:2;;;-1:-1;;1761:12;1723:2;227:6;221:13;239:30;263:5;239:30;:::i;:::-;1813:71;1717:183;-1:-1;;;1717:183::o;2147:333::-;-1:-1;;;;;2739:54;;;;1978:37;;2466:2;2451:18;;2098:37;2302:2;2287:18;;2273:207::o;2884:117::-;-1:-1;;;;;2739:54;;2943:35;;2933:2;;2992:1;;2982:12;2933:2;2927:74;:::o;3008:111::-;3089:5;2651:13;2644:21;3067:5;3064:32;3054:2;;3110:1;;3100:12;3048:71;569:4976:13;;;;;;",
  "sourcePath": "contracts/derivatives.sol",
  "type": "contract"
}